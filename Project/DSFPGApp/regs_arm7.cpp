#include "regs_arm7.h";

REGS_Arm7 Regs_Arm7;


RegSect_display7::RegSect_display7()
{
    DISPSTAT = DSReg(0x004, 15, 0, 1, 0x0004, "readwrite", "DISPSTAT", Regs_Arm7.data);
    DISPSTAT_V_Blank_flag = DSReg(0x004, 0, 0, 1, 0, "readonly", "DISPSTAT_V_Blank_flag", Regs_Arm7.data);
    DISPSTAT_H_Blank_flag = DSReg(0x004, 1, 1, 1, 0, "readonly", "DISPSTAT_H_Blank_flag", Regs_Arm7.data);
    DISPSTAT_V_Counter_flag = DSReg(0x004, 2, 2, 1, 0, "readonly", "DISPSTAT_V_Counter_flag", Regs_Arm7.data);
    DISPSTAT_V_Blank_IRQ_Enable = DSReg(0x004, 3, 3, 1, 0, "readwrite", "DISPSTAT_V_Blank_IRQ_Enable", Regs_Arm7.data);
    DISPSTAT_H_Blank_IRQ_Enable = DSReg(0x004, 4, 4, 1, 0, "readwrite", "DISPSTAT_H_Blank_IRQ_Enable", Regs_Arm7.data);
    DISPSTAT_V_Counter_IRQ_Enable = DSReg(0x004, 5, 5, 1, 0, "readwrite", "DISPSTAT_V_Counter_IRQ_Enable", Regs_Arm7.data);
    DISPSTAT_V_Count_Setting8 = DSReg(0x004, 7, 7, 1, 0, "readwrite", "DISPSTAT_V_Count_Setting8", Regs_Arm7.data);
    DISPSTAT_V_Count_Setting = DSReg(0x004, 15, 8, 1, 0, "readwrite", "DISPSTAT_V_Count_Setting", Regs_Arm7.data);
    VCOUNT = DSReg(0x004, 31, 16, 1, 0, "readwrite", "VCOUNT", Regs_Arm7.data);
}

RegSect_sound7::RegSect_sound7()
{
    SOUND0CNT = DSReg(0x400, 31, 0, 1, 0, "writeonly", "SOUND0CNT", Regs_Arm7.data);
    SOUND0CNT_Volume_Mul = DSReg(0x400, 6, 0, 1, 0, "readwrite", "SOUND0CNT_Volume_Mul", Regs_Arm7.data);
    SOUND0CNT_Volume_Div = DSReg(0x400, 9, 8, 1, 0, "readwrite", "SOUND0CNT_Volume_Div", Regs_Arm7.data);
    SOUND0CNT_Hold = DSReg(0x400, 15, 15, 1, 0, "readwrite", "SOUND0CNT_Hold", Regs_Arm7.data);
    SOUND0CNT_Panning = DSReg(0x400, 22, 16, 1, 0, "readwrite", "SOUND0CNT_Panning", Regs_Arm7.data);
    SOUND0CNT_Wave_Duty = DSReg(0x400, 26, 24, 1, 0, "readwrite", "SOUND0CNT_Wave_Duty", Regs_Arm7.data);
    SOUND0CNT_Repeat_Mode = DSReg(0x400, 28, 27, 1, 0, "readwrite", "SOUND0CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND0CNT_Format = DSReg(0x400, 30, 29, 1, 0, "readwrite", "SOUND0CNT_Format", Regs_Arm7.data);
    SOUND0CNT_Start_Status = DSReg(0x400, 31, 31, 1, 0, "readwrite", "SOUND0CNT_Start_Status", Regs_Arm7.data);
    SOUND0SAD = DSReg(0x404, 26, 0, 1, 0, "writeonly", "SOUND0SAD", Regs_Arm7.data);
    SOUND0TMR = DSReg(0x408, 15, 0, 1, 0, "writeonly", "SOUND0TMR", Regs_Arm7.data);
    SOUND0PNT = DSReg(0x408, 31, 16, 1, 0, "writeonly", "SOUND0PNT", Regs_Arm7.data);
    SOUND0LEN = DSReg(0x40C, 21, 0, 1, 0, "writeonly", "SOUND0LEN", Regs_Arm7.data);
    SOUND1CNT = DSReg(0x410, 31, 0, 1, 0, "writeonly", "SOUND1CNT", Regs_Arm7.data);
    SOUND1CNT_Volume_Mul = DSReg(0x410, 6, 0, 1, 0, "readwrite", "SOUND1CNT_Volume_Mul", Regs_Arm7.data);
    SOUND1CNT_Volume_Div = DSReg(0x410, 9, 8, 1, 0, "readwrite", "SOUND1CNT_Volume_Div", Regs_Arm7.data);
    SOUND1CNT_Hold = DSReg(0x410, 15, 15, 1, 0, "readwrite", "SOUND1CNT_Hold", Regs_Arm7.data);
    SOUND1CNT_Panning = DSReg(0x410, 22, 16, 1, 0, "readwrite", "SOUND1CNT_Panning", Regs_Arm7.data);
    SOUND1CNT_Wave_Duty = DSReg(0x410, 26, 24, 1, 0, "readwrite", "SOUND1CNT_Wave_Duty", Regs_Arm7.data);
    SOUND1CNT_Repeat_Mode = DSReg(0x410, 28, 27, 1, 0, "readwrite", "SOUND1CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND1CNT_Format = DSReg(0x410, 30, 29, 1, 0, "readwrite", "SOUND1CNT_Format", Regs_Arm7.data);
    SOUND1CNT_Start_Status = DSReg(0x410, 31, 31, 1, 0, "readwrite", "SOUND1CNT_Start_Status", Regs_Arm7.data);
    SOUND1SAD = DSReg(0x414, 26, 0, 1, 0, "writeonly", "SOUND1SAD", Regs_Arm7.data);
    SOUND1TMR = DSReg(0x418, 15, 0, 1, 0, "writeonly", "SOUND1TMR", Regs_Arm7.data);
    SOUND1PNT = DSReg(0x418, 31, 16, 1, 0, "writeonly", "SOUND1PNT", Regs_Arm7.data);
    SOUND1LEN = DSReg(0x41C, 21, 0, 1, 0, "writeonly", "SOUND1LEN", Regs_Arm7.data);
    SOUND2CNT = DSReg(0x420, 31, 0, 1, 0, "writeonly", "SOUND2CNT", Regs_Arm7.data);
    SOUND2CNT_Volume_Mul = DSReg(0x420, 6, 0, 1, 0, "readwrite", "SOUND2CNT_Volume_Mul", Regs_Arm7.data);
    SOUND2CNT_Volume_Div = DSReg(0x420, 9, 8, 1, 0, "readwrite", "SOUND2CNT_Volume_Div", Regs_Arm7.data);
    SOUND2CNT_Hold = DSReg(0x420, 15, 15, 1, 0, "readwrite", "SOUND2CNT_Hold", Regs_Arm7.data);
    SOUND2CNT_Panning = DSReg(0x420, 22, 16, 1, 0, "readwrite", "SOUND2CNT_Panning", Regs_Arm7.data);
    SOUND2CNT_Wave_Duty = DSReg(0x420, 26, 24, 1, 0, "readwrite", "SOUND2CNT_Wave_Duty", Regs_Arm7.data);
    SOUND2CNT_Repeat_Mode = DSReg(0x420, 28, 27, 1, 0, "readwrite", "SOUND2CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND2CNT_Format = DSReg(0x420, 30, 29, 1, 0, "readwrite", "SOUND2CNT_Format", Regs_Arm7.data);
    SOUND2CNT_Start_Status = DSReg(0x420, 31, 31, 1, 0, "readwrite", "SOUND2CNT_Start_Status", Regs_Arm7.data);
    SOUND2SAD = DSReg(0x424, 26, 0, 1, 0, "writeonly", "SOUND2SAD", Regs_Arm7.data);
    SOUND2TMR = DSReg(0x428, 15, 0, 1, 0, "writeonly", "SOUND2TMR", Regs_Arm7.data);
    SOUND2PNT = DSReg(0x428, 31, 16, 1, 0, "writeonly", "SOUND2PNT", Regs_Arm7.data);
    SOUND2LEN = DSReg(0x42C, 21, 0, 1, 0, "writeonly", "SOUND2LEN", Regs_Arm7.data);
    SOUND3CNT = DSReg(0x430, 31, 0, 1, 0, "writeonly", "SOUND3CNT", Regs_Arm7.data);
    SOUND3CNT_Volume_Mul = DSReg(0x430, 6, 0, 1, 0, "readwrite", "SOUND3CNT_Volume_Mul", Regs_Arm7.data);
    SOUND3CNT_Volume_Div = DSReg(0x430, 9, 8, 1, 0, "readwrite", "SOUND3CNT_Volume_Div", Regs_Arm7.data);
    SOUND3CNT_Hold = DSReg(0x430, 15, 15, 1, 0, "readwrite", "SOUND3CNT_Hold", Regs_Arm7.data);
    SOUND3CNT_Panning = DSReg(0x430, 22, 16, 1, 0, "readwrite", "SOUND3CNT_Panning", Regs_Arm7.data);
    SOUND3CNT_Wave_Duty = DSReg(0x430, 26, 24, 1, 0, "readwrite", "SOUND3CNT_Wave_Duty", Regs_Arm7.data);
    SOUND3CNT_Repeat_Mode = DSReg(0x430, 28, 27, 1, 0, "readwrite", "SOUND3CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND3CNT_Format = DSReg(0x430, 30, 29, 1, 0, "readwrite", "SOUND3CNT_Format", Regs_Arm7.data);
    SOUND3CNT_Start_Status = DSReg(0x430, 31, 31, 1, 0, "readwrite", "SOUND3CNT_Start_Status", Regs_Arm7.data);
    SOUND3SAD = DSReg(0x434, 26, 0, 1, 0, "writeonly", "SOUND3SAD", Regs_Arm7.data);
    SOUND3TMR = DSReg(0x438, 15, 0, 1, 0, "writeonly", "SOUND3TMR", Regs_Arm7.data);
    SOUND3PNT = DSReg(0x438, 31, 16, 1, 0, "writeonly", "SOUND3PNT", Regs_Arm7.data);
    SOUND3LEN = DSReg(0x43C, 21, 0, 1, 0, "writeonly", "SOUND3LEN", Regs_Arm7.data);
    SOUND4CNT = DSReg(0x440, 31, 0, 1, 0, "writeonly", "SOUND4CNT", Regs_Arm7.data);
    SOUND4CNT_Volume_Mul = DSReg(0x440, 6, 0, 1, 0, "readwrite", "SOUND4CNT_Volume_Mul", Regs_Arm7.data);
    SOUND4CNT_Volume_Div = DSReg(0x440, 9, 8, 1, 0, "readwrite", "SOUND4CNT_Volume_Div", Regs_Arm7.data);
    SOUND4CNT_Hold = DSReg(0x440, 15, 15, 1, 0, "readwrite", "SOUND4CNT_Hold", Regs_Arm7.data);
    SOUND4CNT_Panning = DSReg(0x440, 22, 16, 1, 0, "readwrite", "SOUND4CNT_Panning", Regs_Arm7.data);
    SOUND4CNT_Wave_Duty = DSReg(0x440, 26, 24, 1, 0, "readwrite", "SOUND4CNT_Wave_Duty", Regs_Arm7.data);
    SOUND4CNT_Repeat_Mode = DSReg(0x440, 28, 27, 1, 0, "readwrite", "SOUND4CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND4CNT_Format = DSReg(0x440, 30, 29, 1, 0, "readwrite", "SOUND4CNT_Format", Regs_Arm7.data);
    SOUND4CNT_Start_Status = DSReg(0x440, 31, 31, 1, 0, "readwrite", "SOUND4CNT_Start_Status", Regs_Arm7.data);
    SOUND4SAD = DSReg(0x444, 26, 0, 1, 0, "writeonly", "SOUND4SAD", Regs_Arm7.data);
    SOUND4TMR = DSReg(0x448, 15, 0, 1, 0, "writeonly", "SOUND4TMR", Regs_Arm7.data);
    SOUND4PNT = DSReg(0x448, 31, 16, 1, 0, "writeonly", "SOUND4PNT", Regs_Arm7.data);
    SOUND4LEN = DSReg(0x44C, 21, 0, 1, 0, "writeonly", "SOUND4LEN", Regs_Arm7.data);
    SOUND5CNT = DSReg(0x450, 31, 0, 1, 0, "writeonly", "SOUND5CNT", Regs_Arm7.data);
    SOUND5CNT_Volume_Mul = DSReg(0x450, 6, 0, 1, 0, "readwrite", "SOUND5CNT_Volume_Mul", Regs_Arm7.data);
    SOUND5CNT_Volume_Div = DSReg(0x450, 9, 8, 1, 0, "readwrite", "SOUND5CNT_Volume_Div", Regs_Arm7.data);
    SOUND5CNT_Hold = DSReg(0x450, 15, 15, 1, 0, "readwrite", "SOUND5CNT_Hold", Regs_Arm7.data);
    SOUND5CNT_Panning = DSReg(0x450, 22, 16, 1, 0, "readwrite", "SOUND5CNT_Panning", Regs_Arm7.data);
    SOUND5CNT_Wave_Duty = DSReg(0x450, 26, 24, 1, 0, "readwrite", "SOUND5CNT_Wave_Duty", Regs_Arm7.data);
    SOUND5CNT_Repeat_Mode = DSReg(0x450, 28, 27, 1, 0, "readwrite", "SOUND5CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND5CNT_Format = DSReg(0x450, 30, 29, 1, 0, "readwrite", "SOUND5CNT_Format", Regs_Arm7.data);
    SOUND5CNT_Start_Status = DSReg(0x450, 31, 31, 1, 0, "readwrite", "SOUND5CNT_Start_Status", Regs_Arm7.data);
    SOUND5SAD = DSReg(0x454, 26, 0, 1, 0, "writeonly", "SOUND5SAD", Regs_Arm7.data);
    SOUND5TMR = DSReg(0x458, 15, 0, 1, 0, "writeonly", "SOUND5TMR", Regs_Arm7.data);
    SOUND5PNT = DSReg(0x458, 31, 16, 1, 0, "writeonly", "SOUND5PNT", Regs_Arm7.data);
    SOUND5LEN = DSReg(0x45C, 21, 0, 1, 0, "writeonly", "SOUND5LEN", Regs_Arm7.data);
    SOUND6CNT = DSReg(0x460, 31, 0, 1, 0, "writeonly", "SOUND6CNT", Regs_Arm7.data);
    SOUND6CNT_Volume_Mul = DSReg(0x460, 6, 0, 1, 0, "readwrite", "SOUND6CNT_Volume_Mul", Regs_Arm7.data);
    SOUND6CNT_Volume_Div = DSReg(0x460, 9, 8, 1, 0, "readwrite", "SOUND6CNT_Volume_Div", Regs_Arm7.data);
    SOUND6CNT_Hold = DSReg(0x460, 15, 15, 1, 0, "readwrite", "SOUND6CNT_Hold", Regs_Arm7.data);
    SOUND6CNT_Panning = DSReg(0x460, 22, 16, 1, 0, "readwrite", "SOUND6CNT_Panning", Regs_Arm7.data);
    SOUND6CNT_Wave_Duty = DSReg(0x460, 26, 24, 1, 0, "readwrite", "SOUND6CNT_Wave_Duty", Regs_Arm7.data);
    SOUND6CNT_Repeat_Mode = DSReg(0x460, 28, 27, 1, 0, "readwrite", "SOUND6CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND6CNT_Format = DSReg(0x460, 30, 29, 1, 0, "readwrite", "SOUND6CNT_Format", Regs_Arm7.data);
    SOUND6CNT_Start_Status = DSReg(0x460, 31, 31, 1, 0, "readwrite", "SOUND6CNT_Start_Status", Regs_Arm7.data);
    SOUND6SAD = DSReg(0x464, 26, 0, 1, 0, "writeonly", "SOUND6SAD", Regs_Arm7.data);
    SOUND6TMR = DSReg(0x468, 15, 0, 1, 0, "writeonly", "SOUND6TMR", Regs_Arm7.data);
    SOUND6PNT = DSReg(0x468, 31, 16, 1, 0, "writeonly", "SOUND6PNT", Regs_Arm7.data);
    SOUND6LEN = DSReg(0x46C, 21, 0, 1, 0, "writeonly", "SOUND6LEN", Regs_Arm7.data);
    SOUND7CNT = DSReg(0x470, 31, 0, 1, 0, "writeonly", "SOUND7CNT", Regs_Arm7.data);
    SOUND7CNT_Volume_Mul = DSReg(0x470, 6, 0, 1, 0, "readwrite", "SOUND7CNT_Volume_Mul", Regs_Arm7.data);
    SOUND7CNT_Volume_Div = DSReg(0x470, 9, 8, 1, 0, "readwrite", "SOUND7CNT_Volume_Div", Regs_Arm7.data);
    SOUND7CNT_Hold = DSReg(0x470, 15, 15, 1, 0, "readwrite", "SOUND7CNT_Hold", Regs_Arm7.data);
    SOUND7CNT_Panning = DSReg(0x470, 22, 16, 1, 0, "readwrite", "SOUND7CNT_Panning", Regs_Arm7.data);
    SOUND7CNT_Wave_Duty = DSReg(0x470, 26, 24, 1, 0, "readwrite", "SOUND7CNT_Wave_Duty", Regs_Arm7.data);
    SOUND7CNT_Repeat_Mode = DSReg(0x470, 28, 27, 1, 0, "readwrite", "SOUND7CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND7CNT_Format = DSReg(0x470, 30, 29, 1, 0, "readwrite", "SOUND7CNT_Format", Regs_Arm7.data);
    SOUND7CNT_Start_Status = DSReg(0x470, 31, 31, 1, 0, "readwrite", "SOUND7CNT_Start_Status", Regs_Arm7.data);
    SOUND7SAD = DSReg(0x474, 26, 0, 1, 0, "writeonly", "SOUND7SAD", Regs_Arm7.data);
    SOUND7TMR = DSReg(0x478, 15, 0, 1, 0, "writeonly", "SOUND7TMR", Regs_Arm7.data);
    SOUND7PNT = DSReg(0x478, 31, 16, 1, 0, "writeonly", "SOUND7PNT", Regs_Arm7.data);
    SOUND7LEN = DSReg(0x47C, 21, 0, 1, 0, "writeonly", "SOUND7LEN", Regs_Arm7.data);
    SOUND8CNT = DSReg(0x480, 31, 0, 1, 0, "writeonly", "SOUND8CNT", Regs_Arm7.data);
    SOUND8CNT_Volume_Mul = DSReg(0x480, 6, 0, 1, 0, "readwrite", "SOUND8CNT_Volume_Mul", Regs_Arm7.data);
    SOUND8CNT_Volume_Div = DSReg(0x480, 9, 8, 1, 0, "readwrite", "SOUND8CNT_Volume_Div", Regs_Arm7.data);
    SOUND8CNT_Hold = DSReg(0x480, 15, 15, 1, 0, "readwrite", "SOUND8CNT_Hold", Regs_Arm7.data);
    SOUND8CNT_Panning = DSReg(0x480, 22, 16, 1, 0, "readwrite", "SOUND8CNT_Panning", Regs_Arm7.data);
    SOUND8CNT_Wave_Duty = DSReg(0x480, 26, 24, 1, 0, "readwrite", "SOUND8CNT_Wave_Duty", Regs_Arm7.data);
    SOUND8CNT_Repeat_Mode = DSReg(0x480, 28, 27, 1, 0, "readwrite", "SOUND8CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND8CNT_Format = DSReg(0x480, 30, 29, 1, 0, "readwrite", "SOUND8CNT_Format", Regs_Arm7.data);
    SOUND8CNT_Start_Status = DSReg(0x480, 31, 31, 1, 0, "readwrite", "SOUND8CNT_Start_Status", Regs_Arm7.data);
    SOUND8SAD = DSReg(0x484, 26, 0, 1, 0, "writeonly", "SOUND8SAD", Regs_Arm7.data);
    SOUND8TMR = DSReg(0x488, 15, 0, 1, 0, "writeonly", "SOUND8TMR", Regs_Arm7.data);
    SOUND8PNT = DSReg(0x488, 31, 16, 1, 0, "writeonly", "SOUND8PNT", Regs_Arm7.data);
    SOUND8LEN = DSReg(0x48C, 21, 0, 1, 0, "writeonly", "SOUND8LEN", Regs_Arm7.data);
    SOUND9CNT = DSReg(0x490, 31, 0, 1, 0, "writeonly", "SOUND9CNT", Regs_Arm7.data);
    SOUND9CNT_Volume_Mul = DSReg(0x490, 6, 0, 1, 0, "readwrite", "SOUND9CNT_Volume_Mul", Regs_Arm7.data);
    SOUND9CNT_Volume_Div = DSReg(0x490, 9, 8, 1, 0, "readwrite", "SOUND9CNT_Volume_Div", Regs_Arm7.data);
    SOUND9CNT_Hold = DSReg(0x490, 15, 15, 1, 0, "readwrite", "SOUND9CNT_Hold", Regs_Arm7.data);
    SOUND9CNT_Panning = DSReg(0x490, 22, 16, 1, 0, "readwrite", "SOUND9CNT_Panning", Regs_Arm7.data);
    SOUND9CNT_Wave_Duty = DSReg(0x490, 26, 24, 1, 0, "readwrite", "SOUND9CNT_Wave_Duty", Regs_Arm7.data);
    SOUND9CNT_Repeat_Mode = DSReg(0x490, 28, 27, 1, 0, "readwrite", "SOUND9CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND9CNT_Format = DSReg(0x490, 30, 29, 1, 0, "readwrite", "SOUND9CNT_Format", Regs_Arm7.data);
    SOUND9CNT_Start_Status = DSReg(0x490, 31, 31, 1, 0, "readwrite", "SOUND9CNT_Start_Status", Regs_Arm7.data);
    SOUND9SAD = DSReg(0x494, 26, 0, 1, 0, "writeonly", "SOUND9SAD", Regs_Arm7.data);
    SOUND9TMR = DSReg(0x498, 15, 0, 1, 0, "writeonly", "SOUND9TMR", Regs_Arm7.data);
    SOUND9PNT = DSReg(0x498, 31, 16, 1, 0, "writeonly", "SOUND9PNT", Regs_Arm7.data);
    SOUND9LEN = DSReg(0x49C, 21, 0, 1, 0, "writeonly", "SOUND9LEN", Regs_Arm7.data);
    SOUND10CNT = DSReg(0x4A0, 31, 0, 1, 0, "writeonly", "SOUND10CNT", Regs_Arm7.data);
    SOUND10CNT_Volume_Mul = DSReg(0x4A0, 6, 0, 1, 0, "readwrite", "SOUND10CNT_Volume_Mul", Regs_Arm7.data);
    SOUND10CNT_Volume_Div = DSReg(0x4A0, 9, 8, 1, 0, "readwrite", "SOUND10CNT_Volume_Div", Regs_Arm7.data);
    SOUND10CNT_Hold = DSReg(0x4A0, 15, 15, 1, 0, "readwrite", "SOUND10CNT_Hold", Regs_Arm7.data);
    SOUND10CNT_Panning = DSReg(0x4A0, 22, 16, 1, 0, "readwrite", "SOUND10CNT_Panning", Regs_Arm7.data);
    SOUND10CNT_Wave_Duty = DSReg(0x4A0, 26, 24, 1, 0, "readwrite", "SOUND10CNT_Wave_Duty", Regs_Arm7.data);
    SOUND10CNT_Repeat_Mode = DSReg(0x4A0, 28, 27, 1, 0, "readwrite", "SOUND10CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND10CNT_Format = DSReg(0x4A0, 30, 29, 1, 0, "readwrite", "SOUND10CNT_Format", Regs_Arm7.data);
    SOUND10CNT_Start_Status = DSReg(0x4A0, 31, 31, 1, 0, "readwrite", "SOUND10CNT_Start_Status", Regs_Arm7.data);
    SOUND10SAD = DSReg(0x4A4, 26, 0, 1, 0, "writeonly", "SOUND10SAD", Regs_Arm7.data);
    SOUND10TMR = DSReg(0x4A8, 15, 0, 1, 0, "writeonly", "SOUND10TMR", Regs_Arm7.data);
    SOUND10PNT = DSReg(0x4A8, 31, 16, 1, 0, "writeonly", "SOUND10PNT", Regs_Arm7.data);
    SOUND10LEN = DSReg(0x4AC, 21, 0, 1, 0, "writeonly", "SOUND10LEN", Regs_Arm7.data);
    SOUND11CNT = DSReg(0x4B0, 31, 0, 1, 0, "writeonly", "SOUND11CNT", Regs_Arm7.data);
    SOUND11CNT_Volume_Mul = DSReg(0x4B0, 6, 0, 1, 0, "readwrite", "SOUND11CNT_Volume_Mul", Regs_Arm7.data);
    SOUND11CNT_Volume_Div = DSReg(0x4B0, 9, 8, 1, 0, "readwrite", "SOUND11CNT_Volume_Div", Regs_Arm7.data);
    SOUND11CNT_Hold = DSReg(0x4B0, 15, 15, 1, 0, "readwrite", "SOUND11CNT_Hold", Regs_Arm7.data);
    SOUND11CNT_Panning = DSReg(0x4B0, 22, 16, 1, 0, "readwrite", "SOUND11CNT_Panning", Regs_Arm7.data);
    SOUND11CNT_Wave_Duty = DSReg(0x4B0, 26, 24, 1, 0, "readwrite", "SOUND11CNT_Wave_Duty", Regs_Arm7.data);
    SOUND11CNT_Repeat_Mode = DSReg(0x4B0, 28, 27, 1, 0, "readwrite", "SOUND11CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND11CNT_Format = DSReg(0x4B0, 30, 29, 1, 0, "readwrite", "SOUND11CNT_Format", Regs_Arm7.data);
    SOUND11CNT_Start_Status = DSReg(0x4B0, 31, 31, 1, 0, "readwrite", "SOUND11CNT_Start_Status", Regs_Arm7.data);
    SOUND11SAD = DSReg(0x4B4, 26, 0, 1, 0, "writeonly", "SOUND11SAD", Regs_Arm7.data);
    SOUND11TMR = DSReg(0x4B8, 15, 0, 1, 0, "writeonly", "SOUND11TMR", Regs_Arm7.data);
    SOUND11PNT = DSReg(0x4B8, 31, 16, 1, 0, "writeonly", "SOUND11PNT", Regs_Arm7.data);
    SOUND11LEN = DSReg(0x4BC, 21, 0, 1, 0, "writeonly", "SOUND11LEN", Regs_Arm7.data);
    SOUND12CNT = DSReg(0x4C0, 31, 0, 1, 0, "writeonly", "SOUND12CNT", Regs_Arm7.data);
    SOUND12CNT_Volume_Mul = DSReg(0x4C0, 6, 0, 1, 0, "readwrite", "SOUND12CNT_Volume_Mul", Regs_Arm7.data);
    SOUND12CNT_Volume_Div = DSReg(0x4C0, 9, 8, 1, 0, "readwrite", "SOUND12CNT_Volume_Div", Regs_Arm7.data);
    SOUND12CNT_Hold = DSReg(0x4C0, 15, 15, 1, 0, "readwrite", "SOUND12CNT_Hold", Regs_Arm7.data);
    SOUND12CNT_Panning = DSReg(0x4C0, 22, 16, 1, 0, "readwrite", "SOUND12CNT_Panning", Regs_Arm7.data);
    SOUND12CNT_Wave_Duty = DSReg(0x4C0, 26, 24, 1, 0, "readwrite", "SOUND12CNT_Wave_Duty", Regs_Arm7.data);
    SOUND12CNT_Repeat_Mode = DSReg(0x4C0, 28, 27, 1, 0, "readwrite", "SOUND12CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND12CNT_Format = DSReg(0x4C0, 30, 29, 1, 0, "readwrite", "SOUND12CNT_Format", Regs_Arm7.data);
    SOUND12CNT_Start_Status = DSReg(0x4C0, 31, 31, 1, 0, "readwrite", "SOUND12CNT_Start_Status", Regs_Arm7.data);
    SOUND12SAD = DSReg(0x4C4, 26, 0, 1, 0, "writeonly", "SOUND12SAD", Regs_Arm7.data);
    SOUND12TMR = DSReg(0x4C8, 15, 0, 1, 0, "writeonly", "SOUND12TMR", Regs_Arm7.data);
    SOUND12PNT = DSReg(0x4C8, 31, 16, 1, 0, "writeonly", "SOUND12PNT", Regs_Arm7.data);
    SOUND12LEN = DSReg(0x4CC, 21, 0, 1, 0, "writeonly", "SOUND12LEN", Regs_Arm7.data);
    SOUND13CNT = DSReg(0x4D0, 31, 0, 1, 0, "writeonly", "SOUND13CNT", Regs_Arm7.data);
    SOUND13CNT_Volume_Mul = DSReg(0x4D0, 6, 0, 1, 0, "readwrite", "SOUND13CNT_Volume_Mul", Regs_Arm7.data);
    SOUND13CNT_Volume_Div = DSReg(0x4D0, 9, 8, 1, 0, "readwrite", "SOUND13CNT_Volume_Div", Regs_Arm7.data);
    SOUND13CNT_Hold = DSReg(0x4D0, 15, 15, 1, 0, "readwrite", "SOUND13CNT_Hold", Regs_Arm7.data);
    SOUND13CNT_Panning = DSReg(0x4D0, 22, 16, 1, 0, "readwrite", "SOUND13CNT_Panning", Regs_Arm7.data);
    SOUND13CNT_Wave_Duty = DSReg(0x4D0, 26, 24, 1, 0, "readwrite", "SOUND13CNT_Wave_Duty", Regs_Arm7.data);
    SOUND13CNT_Repeat_Mode = DSReg(0x4D0, 28, 27, 1, 0, "readwrite", "SOUND13CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND13CNT_Format = DSReg(0x4D0, 30, 29, 1, 0, "readwrite", "SOUND13CNT_Format", Regs_Arm7.data);
    SOUND13CNT_Start_Status = DSReg(0x4D0, 31, 31, 1, 0, "readwrite", "SOUND13CNT_Start_Status", Regs_Arm7.data);
    SOUND13SAD = DSReg(0x4D4, 26, 0, 1, 0, "writeonly", "SOUND13SAD", Regs_Arm7.data);
    SOUND13TMR = DSReg(0x4D8, 15, 0, 1, 0, "writeonly", "SOUND13TMR", Regs_Arm7.data);
    SOUND13PNT = DSReg(0x4D8, 31, 16, 1, 0, "writeonly", "SOUND13PNT", Regs_Arm7.data);
    SOUND13LEN = DSReg(0x4DC, 21, 0, 1, 0, "writeonly", "SOUND13LEN", Regs_Arm7.data);
    SOUND14CNT = DSReg(0x4E0, 31, 0, 1, 0, "writeonly", "SOUND14CNT", Regs_Arm7.data);
    SOUND14CNT_Volume_Mul = DSReg(0x4E0, 6, 0, 1, 0, "readwrite", "SOUND14CNT_Volume_Mul", Regs_Arm7.data);
    SOUND14CNT_Volume_Div = DSReg(0x4E0, 9, 8, 1, 0, "readwrite", "SOUND14CNT_Volume_Div", Regs_Arm7.data);
    SOUND14CNT_Hold = DSReg(0x4E0, 15, 15, 1, 0, "readwrite", "SOUND14CNT_Hold", Regs_Arm7.data);
    SOUND14CNT_Panning = DSReg(0x4E0, 22, 16, 1, 0, "readwrite", "SOUND14CNT_Panning", Regs_Arm7.data);
    SOUND14CNT_Wave_Duty = DSReg(0x4E0, 26, 24, 1, 0, "readwrite", "SOUND14CNT_Wave_Duty", Regs_Arm7.data);
    SOUND14CNT_Repeat_Mode = DSReg(0x4E0, 28, 27, 1, 0, "readwrite", "SOUND14CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND14CNT_Format = DSReg(0x4E0, 30, 29, 1, 0, "readwrite", "SOUND14CNT_Format", Regs_Arm7.data);
    SOUND14CNT_Start_Status = DSReg(0x4E0, 31, 31, 1, 0, "readwrite", "SOUND14CNT_Start_Status", Regs_Arm7.data);
    SOUND14SAD = DSReg(0x4E4, 26, 0, 1, 0, "writeonly", "SOUND14SAD", Regs_Arm7.data);
    SOUND14TMR = DSReg(0x4E8, 15, 0, 1, 0, "writeonly", "SOUND14TMR", Regs_Arm7.data);
    SOUND14PNT = DSReg(0x4E8, 31, 16, 1, 0, "writeonly", "SOUND14PNT", Regs_Arm7.data);
    SOUND14LEN = DSReg(0x4EC, 21, 0, 1, 0, "writeonly", "SOUND14LEN", Regs_Arm7.data);
    SOUND15CNT = DSReg(0x4F0, 31, 0, 1, 0, "writeonly", "SOUND15CNT", Regs_Arm7.data);
    SOUND15CNT_Volume_Mul = DSReg(0x4F0, 6, 0, 1, 0, "readwrite", "SOUND15CNT_Volume_Mul", Regs_Arm7.data);
    SOUND15CNT_Volume_Div = DSReg(0x4F0, 9, 8, 1, 0, "readwrite", "SOUND15CNT_Volume_Div", Regs_Arm7.data);
    SOUND15CNT_Hold = DSReg(0x4F0, 15, 15, 1, 0, "readwrite", "SOUND15CNT_Hold", Regs_Arm7.data);
    SOUND15CNT_Panning = DSReg(0x4F0, 22, 16, 1, 0, "readwrite", "SOUND15CNT_Panning", Regs_Arm7.data);
    SOUND15CNT_Wave_Duty = DSReg(0x4F0, 26, 24, 1, 0, "readwrite", "SOUND15CNT_Wave_Duty", Regs_Arm7.data);
    SOUND15CNT_Repeat_Mode = DSReg(0x4F0, 28, 27, 1, 0, "readwrite", "SOUND15CNT_Repeat_Mode", Regs_Arm7.data);
    SOUND15CNT_Format = DSReg(0x4F0, 30, 29, 1, 0, "readwrite", "SOUND15CNT_Format", Regs_Arm7.data);
    SOUND15CNT_Start_Status = DSReg(0x4F0, 31, 31, 1, 0, "readwrite", "SOUND15CNT_Start_Status", Regs_Arm7.data);
    SOUND15SAD = DSReg(0x4F4, 26, 0, 1, 0, "writeonly", "SOUND15SAD", Regs_Arm7.data);
    SOUND15TMR = DSReg(0x4F8, 15, 0, 1, 0, "writeonly", "SOUND15TMR", Regs_Arm7.data);
    SOUND15PNT = DSReg(0x4F8, 31, 16, 1, 0, "writeonly", "SOUND15PNT", Regs_Arm7.data);
    SOUND15LEN = DSReg(0x4FC, 21, 0, 1, 0, "writeonly", "SOUND15LEN", Regs_Arm7.data);
    SOUNDCNT = DSReg(0x500, 15, 0, 1, 0, "writeonly", "SOUNDCNT", Regs_Arm7.data);
    SOUNDCNT_Master_Volume = DSReg(0x500, 6, 0, 1, 0, "readwrite", "SOUNDCNT_Master_Volume", Regs_Arm7.data);
    SOUNDCNT_Left_Output_from = DSReg(0x500, 9, 8, 1, 0, "readwrite", "SOUNDCNT_Left_Output_from", Regs_Arm7.data);
    SOUNDCNT_Right_Output_from = DSReg(0x500, 11, 10, 1, 0, "readwrite", "SOUNDCNT_Right_Output_from", Regs_Arm7.data);
    SOUNDCNT_Output_Ch1_to_Mixer = DSReg(0x500, 12, 12, 1, 0, "readwrite", "SOUNDCNT_Output_Ch1_to_Mixer", Regs_Arm7.data);
    SOUNDCNT_Output_Ch3_to_Mixer = DSReg(0x500, 13, 13, 1, 0, "readwrite", "SOUNDCNT_Output_Ch3_to_Mixer", Regs_Arm7.data);
    SOUNDCNT_Master_Enable = DSReg(0x500, 15, 15, 1, 0, "readwrite", "SOUNDCNT_Master_Enable", Regs_Arm7.data);
    SOUNDBIAS = DSReg(0x504, 9, 0, 1, 0x0200, "readwrite", "SOUNDBIAS", Regs_Arm7.data);
    SOUNDCAP = DSReg(0x508, 15, 0, 1, 0, "writeonly", "SOUNDCAP", Regs_Arm7.data);
    SOUNDCAP0_Control = DSReg(0x508, 0, 0, 1, 0, "readwrite", "SOUNDCAP0_Control", Regs_Arm7.data);
    SOUNDCAP0_Capture_Source = DSReg(0x508, 1, 1, 1, 0, "readwrite", "SOUNDCAP0_Capture_Source", Regs_Arm7.data);
    SOUNDCAP0_Capture_Repeat = DSReg(0x508, 2, 2, 1, 0, "readwrite", "SOUNDCAP0_Capture_Repeat", Regs_Arm7.data);
    SOUNDCAP0_Capture_Format = DSReg(0x508, 3, 3, 1, 0, "readwrite", "SOUNDCAP0_Capture_Format", Regs_Arm7.data);
    SOUNDCAP0_Capture_Start_Status = DSReg(0x508, 7, 7, 1, 0, "readwrite", "SOUNDCAP0_Capture_Start_Status", Regs_Arm7.data);
    SOUNDCAP1_Control = DSReg(0x508, 8, 8, 1, 0, "readwrite", "SOUNDCAP1_Control", Regs_Arm7.data);
    SOUNDCAP1_Capture_Source = DSReg(0x508, 9, 9, 1, 0, "readwrite", "SOUNDCAP1_Capture_Source", Regs_Arm7.data);
    SOUNDCAP1_Capture_Repeat = DSReg(0x508, 10, 10, 1, 0, "readwrite", "SOUNDCAP1_Capture_Repeat", Regs_Arm7.data);
    SOUNDCAP1_Capture_Format = DSReg(0x508, 11, 11, 1, 0, "readwrite", "SOUNDCAP1_Capture_Format", Regs_Arm7.data);
    SOUNDCAP1_Capture_Start_Status = DSReg(0x508, 15, 15, 1, 0, "readwrite", "SOUNDCAP1_Capture_Start_Status", Regs_Arm7.data);
    SNDCAP0DAD = DSReg(0x510, 26, 0, 1, 0, "readwrite", "SNDCAP0DAD", Regs_Arm7.data);
    SNDCAP0LEN = DSReg(0x510, 15, 0, 1, 0, "readwrite", "SNDCAP0LEN", Regs_Arm7.data);
    SNDCAP1DAD = DSReg(0x518, 26, 0, 1, 0, "readwrite", "SNDCAP1DAD", Regs_Arm7.data);
    SNDCAP1LEN = DSReg(0x51C, 15, 0, 1, 0, "readwrite", "SNDCAP1LEN", Regs_Arm7.data);
}

RegSect_dma7::RegSect_dma7()
{
    DMA0SAD = DSReg(0xB0, 31, 0, 1, 0, "readwrite", "DMA0SAD", Regs_Arm7.data);
    DMA0DAD = DSReg(0xB4, 31, 0, 1, 0, "readwrite", "DMA0DAD", Regs_Arm7.data);
    DMA0CNT_L = DSReg(0xB8, 15, 0, 1, 0, "readwrite", "DMA0CNT_L", Regs_Arm7.data);
    DMA0CNT_H = DSReg(0xB8, 31, 16, 1, 0, "readwrite", "DMA0CNT_H", Regs_Arm7.data);
    DMA0CNT_H_Dest_Addr_Control = DSReg(0xB8, 22, 21, 1, 0, "readwrite", "DMA0CNT_H_Dest_Addr_Control", Regs_Arm7.data);
    DMA0CNT_H_Source_Adr_Control = DSReg(0xB8, 24, 23, 1, 0, "readwrite", "DMA0CNT_H_Source_Adr_Control", Regs_Arm7.data);
    DMA0CNT_H_DMA_Repeat = DSReg(0xB8, 25, 25, 1, 0, "readwrite", "DMA0CNT_H_DMA_Repeat", Regs_Arm7.data);
    DMA0CNT_H_DMA_Transfer_Type = DSReg(0xB8, 26, 26, 1, 0, "readwrite", "DMA0CNT_H_DMA_Transfer_Type", Regs_Arm7.data);
    DMA0CNT_H_DMA_Start_Timing = DSReg(0xB8, 29, 28, 1, 0, "readwrite", "DMA0CNT_H_DMA_Start_Timing", Regs_Arm7.data);
    DMA0CNT_H_IRQ_on = DSReg(0xB8, 30, 30, 1, 0, "readwrite", "DMA0CNT_H_IRQ_on", Regs_Arm7.data);
    DMA0CNT_H_DMA_Enable = DSReg(0xB8, 31, 31, 1, 0, "readwrite", "DMA0CNT_H_DMA_Enable", Regs_Arm7.data);
    DMA1SAD = DSReg(0xBC, 31, 0, 1, 0, "readwrite", "DMA1SAD", Regs_Arm7.data);
    DMA1DAD = DSReg(0xC0, 31, 0, 1, 0, "readwrite", "DMA1DAD", Regs_Arm7.data);
    DMA1CNT_L = DSReg(0xC4, 15, 0, 1, 0, "readwrite", "DMA1CNT_L", Regs_Arm7.data);
    DMA1CNT_H = DSReg(0xC4, 31, 16, 1, 0, "readwrite", "DMA1CNT_H", Regs_Arm7.data);
    DMA1CNT_H_Dest_Addr_Control = DSReg(0xC4, 22, 21, 1, 0, "readwrite", "DMA1CNT_H_Dest_Addr_Control", Regs_Arm7.data);
    DMA1CNT_H_Source_Adr_Control = DSReg(0xC4, 24, 23, 1, 0, "readwrite", "DMA1CNT_H_Source_Adr_Control", Regs_Arm7.data);
    DMA1CNT_H_DMA_Repeat = DSReg(0xC4, 25, 25, 1, 0, "readwrite", "DMA1CNT_H_DMA_Repeat", Regs_Arm7.data);
    DMA1CNT_H_DMA_Transfer_Type = DSReg(0xC4, 26, 26, 1, 0, "readwrite", "DMA1CNT_H_DMA_Transfer_Type", Regs_Arm7.data);
    DMA1CNT_H_DMA_Start_Timing = DSReg(0xC4, 29, 28, 1, 0, "readwrite", "DMA1CNT_H_DMA_Start_Timing", Regs_Arm7.data);
    DMA1CNT_H_IRQ_on = DSReg(0xC4, 30, 30, 1, 0, "readwrite", "DMA1CNT_H_IRQ_on", Regs_Arm7.data);
    DMA1CNT_H_DMA_Enable = DSReg(0xC4, 31, 31, 1, 0, "readwrite", "DMA1CNT_H_DMA_Enable", Regs_Arm7.data);
    DMA2SAD = DSReg(0xC8, 31, 0, 1, 0, "readwrite", "DMA2SAD", Regs_Arm7.data);
    DMA2DAD = DSReg(0xCC, 31, 0, 1, 0, "readwrite", "DMA2DAD", Regs_Arm7.data);
    DMA2CNT_L = DSReg(0xD0, 15, 0, 1, 0, "readwrite", "DMA2CNT_L", Regs_Arm7.data);
    DMA2CNT_H = DSReg(0xD0, 31, 16, 1, 0, "readwrite", "DMA2CNT_H", Regs_Arm7.data);
    DMA2CNT_H_Dest_Addr_Control = DSReg(0xD0, 22, 21, 1, 0, "readwrite", "DMA2CNT_H_Dest_Addr_Control", Regs_Arm7.data);
    DMA2CNT_H_Source_Adr_Control = DSReg(0xD0, 24, 23, 1, 0, "readwrite", "DMA2CNT_H_Source_Adr_Control", Regs_Arm7.data);
    DMA2CNT_H_DMA_Repeat = DSReg(0xD0, 25, 25, 1, 0, "readwrite", "DMA2CNT_H_DMA_Repeat", Regs_Arm7.data);
    DMA2CNT_H_DMA_Transfer_Type = DSReg(0xD0, 26, 26, 1, 0, "readwrite", "DMA2CNT_H_DMA_Transfer_Type", Regs_Arm7.data);
    DMA2CNT_H_DMA_Start_Timing = DSReg(0xD0, 29, 28, 1, 0, "readwrite", "DMA2CNT_H_DMA_Start_Timing", Regs_Arm7.data);
    DMA2CNT_H_IRQ_on = DSReg(0xD0, 30, 30, 1, 0, "readwrite", "DMA2CNT_H_IRQ_on", Regs_Arm7.data);
    DMA2CNT_H_DMA_Enable = DSReg(0xD0, 31, 31, 1, 0, "readwrite", "DMA2CNT_H_DMA_Enable", Regs_Arm7.data);
    DMA3SAD = DSReg(0xD4, 31, 0, 1, 0, "readwrite", "DMA3SAD", Regs_Arm7.data);
    DMA3DAD = DSReg(0xD8, 31, 0, 1, 0, "readwrite", "DMA3DAD", Regs_Arm7.data);
    DMA3CNT_L = DSReg(0xDC, 15, 0, 1, 0, "readwrite", "DMA3CNT_L", Regs_Arm7.data);
    DMA3CNT_H = DSReg(0xDC, 31, 16, 1, 0, "readwrite", "DMA3CNT_H", Regs_Arm7.data);
    DMA3CNT_H_Dest_Addr_Control = DSReg(0xDC, 22, 21, 1, 0, "readwrite", "DMA3CNT_H_Dest_Addr_Control", Regs_Arm7.data);
    DMA3CNT_H_Source_Adr_Control = DSReg(0xDC, 24, 23, 1, 0, "readwrite", "DMA3CNT_H_Source_Adr_Control", Regs_Arm7.data);
    DMA3CNT_H_DMA_Repeat = DSReg(0xDC, 25, 25, 1, 0, "readwrite", "DMA3CNT_H_DMA_Repeat", Regs_Arm7.data);
    DMA3CNT_H_DMA_Transfer_Type = DSReg(0xDC, 26, 26, 1, 0, "readwrite", "DMA3CNT_H_DMA_Transfer_Type", Regs_Arm7.data);
    DMA3CNT_H_Game_Pak_DRQ = DSReg(0xDC, 27, 27, 1, 0, "readwrite", "DMA3CNT_H_Game_Pak_DRQ", Regs_Arm7.data);
    DMA3CNT_H_DMA_Start_Timing = DSReg(0xDC, 29, 28, 1, 0, "readwrite", "DMA3CNT_H_DMA_Start_Timing", Regs_Arm7.data);
    DMA3CNT_H_IRQ_on = DSReg(0xDC, 30, 30, 1, 0, "readwrite", "DMA3CNT_H_IRQ_on", Regs_Arm7.data);
    DMA3CNT_H_DMA_Enable = DSReg(0xDC, 31, 31, 1, 0, "readwrite", "DMA3CNT_H_DMA_Enable", Regs_Arm7.data);
}

RegSect_timer7::RegSect_timer7()
{
    TM0CNT_L = DSReg(0x100, 15, 0, 1, 0, "readwrite", "TM0CNT_L", Regs_Arm7.data);
    TM0CNT_H = DSReg(0x100, 31, 16, 1, 0, "readwrite", "TM0CNT_H", Regs_Arm7.data);
    TM0CNT_H_Prescaler = DSReg(0x100, 17, 16, 1, 0, "readwrite", "TM0CNT_H_Prescaler", Regs_Arm7.data);
    TM0CNT_H_Count_up = DSReg(0x100, 18, 18, 1, 0, "readwrite", "TM0CNT_H_Count_up", Regs_Arm7.data);
    TM0CNT_H_Timer_IRQ_Enable = DSReg(0x100, 22, 22, 1, 0, "readwrite", "TM0CNT_H_Timer_IRQ_Enable", Regs_Arm7.data);
    TM0CNT_H_Timer_Start_Stop = DSReg(0x100, 23, 23, 1, 0, "readwrite", "TM0CNT_H_Timer_Start_Stop", Regs_Arm7.data);
    TM1CNT_L = DSReg(0x104, 15, 0, 1, 0, "readwrite", "TM1CNT_L", Regs_Arm7.data);
    TM1CNT_H = DSReg(0x104, 31, 16, 1, 0, "readwrite", "TM1CNT_H", Regs_Arm7.data);
    TM1CNT_H_Prescaler = DSReg(0x104, 17, 16, 1, 0, "readwrite", "TM1CNT_H_Prescaler", Regs_Arm7.data);
    TM1CNT_H_Count_up = DSReg(0x104, 18, 18, 1, 0, "readwrite", "TM1CNT_H_Count_up", Regs_Arm7.data);
    TM1CNT_H_Timer_IRQ_Enable = DSReg(0x104, 22, 22, 1, 0, "readwrite", "TM1CNT_H_Timer_IRQ_Enable", Regs_Arm7.data);
    TM1CNT_H_Timer_Start_Stop = DSReg(0x104, 23, 23, 1, 0, "readwrite", "TM1CNT_H_Timer_Start_Stop", Regs_Arm7.data);
    TM2CNT_L = DSReg(0x108, 15, 0, 1, 0, "readwrite", "TM2CNT_L", Regs_Arm7.data);
    TM2CNT_H = DSReg(0x108, 31, 16, 1, 0, "readwrite", "TM2CNT_H", Regs_Arm7.data);
    TM2CNT_H_Prescaler = DSReg(0x108, 17, 16, 1, 0, "readwrite", "TM2CNT_H_Prescaler", Regs_Arm7.data);
    TM2CNT_H_Count_up = DSReg(0x108, 18, 18, 1, 0, "readwrite", "TM2CNT_H_Count_up", Regs_Arm7.data);
    TM2CNT_H_Timer_IRQ_Enable = DSReg(0x108, 22, 22, 1, 0, "readwrite", "TM2CNT_H_Timer_IRQ_Enable", Regs_Arm7.data);
    TM2CNT_H_Timer_Start_Stop = DSReg(0x108, 23, 23, 1, 0, "readwrite", "TM2CNT_H_Timer_Start_Stop", Regs_Arm7.data);
    TM3CNT_L = DSReg(0x10C, 15, 0, 1, 0, "readwrite", "TM3CNT_L", Regs_Arm7.data);
    TM3CNT_H = DSReg(0x10C, 31, 16, 1, 0, "readwrite", "TM3CNT_H", Regs_Arm7.data);
    TM3CNT_H_Prescaler = DSReg(0x10C, 17, 16, 1, 0, "readwrite", "TM3CNT_H_Prescaler", Regs_Arm7.data);
    TM3CNT_H_Count_up = DSReg(0x10C, 18, 18, 1, 0, "readwrite", "TM3CNT_H_Count_up", Regs_Arm7.data);
    TM3CNT_H_Timer_IRQ_Enable = DSReg(0x10C, 22, 22, 1, 0, "readwrite", "TM3CNT_H_Timer_IRQ_Enable", Regs_Arm7.data);
    TM3CNT_H_Timer_Start_Stop = DSReg(0x10C, 23, 23, 1, 0, "readwrite", "TM3CNT_H_Timer_Start_Stop", Regs_Arm7.data);
}

RegSect_keypad7::RegSect_keypad7()
{
    KEYINPUT = DSReg(0x130, 15, 0, 1, 0, "readonly", "KEYINPUT", Regs_Arm7.data);
    KEYCNT = DSReg(0x130, 31, 16, 1, 0, "readwrite", "KEYCNT", Regs_Arm7.data);
    RCNT = DSReg(0x134, 15, 0, 1, 0, "readwrite", "RCNT", Regs_Arm7.data);
    EXTKEYIN = DSReg(0x134, 23, 16, 1, 0, "readonly", "EXTKEYIN", Regs_Arm7.data);
}

RegSect_serial7::RegSect_serial7()
{
    SIODATA32 = DSReg(0x120, 31, 0, 1, 0, "readwrite", "SIODATA32", Regs_Arm7.data);
    SIOMULTI0 = DSReg(0x120, 15, 0, 1, 0, "readwrite", "SIOMULTI0", Regs_Arm7.data);
    SIOMULTI1 = DSReg(0x122, 15, 0, 1, 0, "readwrite", "SIOMULTI1", Regs_Arm7.data);
    SIOMULTI2 = DSReg(0x124, 15, 0, 1, 0, "readwrite", "SIOMULTI2", Regs_Arm7.data);
    SIOMULTI3 = DSReg(0x126, 15, 0, 1, 0, "readwrite", "SIOMULTI3", Regs_Arm7.data);
    SIOCNT = DSReg(0x128, 15, 0, 1, 0, "readwrite", "SIOCNT", Regs_Arm7.data);
    SIOMLT_SEND = DSReg(0x12A, 15, 0, 1, 0, "readwrite", "SIOMLT_SEND", Regs_Arm7.data);
    SIODATA8 = DSReg(0x12A, 15, 0, 1, 0, "readwrite", "SIODATA8", Regs_Arm7.data);
    JOYCNT = DSReg(0x140, 15, 0, 1, 0, "readwrite", "JOYCNT", Regs_Arm7.data);
    JOY_RECV = DSReg(0x150, 31, 0, 1, 0, "readwrite", "JOY_RECV", Regs_Arm7.data);
    JOY_TRANS = DSReg(0x154, 31, 0, 1, 0, "readwrite", "JOY_TRANS", Regs_Arm7.data);
    JOYSTAT = DSReg(0x158, 15, 0, 1, 0, "readwrite", "JOYSTAT", Regs_Arm7.data);
}

RegSect_system7::RegSect_system7()
{
    RTC_reg = DSReg(0x138, 15, 0, 1, 0, "writeonly", "RTC_reg", Regs_Arm7.data);
    RTC_reg_Data_IO = DSReg(0x138, 0, 0, 1, 0, "readwrite", "RTC_reg_Data_IO", Regs_Arm7.data);
    RTC_reg_Clock = DSReg(0x138, 1, 1, 1, 0, "readwrite", "RTC_reg_Clock", Regs_Arm7.data);
    RTC_reg_Select = DSReg(0x138, 2, 2, 1, 0, "readwrite", "RTC_reg_Select", Regs_Arm7.data);
    RTC_reg_Unused_IO_Line3 = DSReg(0x138, 3, 3, 1, 0, "readwrite", "RTC_reg_Unused_IO_Line3", Regs_Arm7.data);
    RTC_reg_Data_Direction = DSReg(0x138, 4, 4, 1, 0, "readwrite", "RTC_reg_Data_Direction", Regs_Arm7.data);
    RTC_reg_Clock_Direction = DSReg(0x138, 5, 5, 1, 0, "readwrite", "RTC_reg_Clock_Direction", Regs_Arm7.data);
    RTC_reg_Select_Direction = DSReg(0x138, 6, 6, 1, 0, "readwrite", "RTC_reg_Select_Direction", Regs_Arm7.data);
    RTC_reg_Direction_unused3 = DSReg(0x138, 7, 7, 1, 0, "readwrite", "RTC_reg_Direction_unused3", Regs_Arm7.data);
    RTC_reg_Unused_IO_Lines811 = DSReg(0x138, 11, 8, 1, 0, "readwrite", "RTC_reg_Unused_IO_Lines811", Regs_Arm7.data);
    RTC_reg_Direction_unused811 = DSReg(0x138, 15, 12, 1, 0, "readwrite", "RTC_reg_Direction_unused811", Regs_Arm7.data);
    IPCSYNC = DSReg(0x180, 15, 0, 1, 0, "writeonly", "IPCSYNC", Regs_Arm7.data);
    IPCSYNC_Data_from_IPCSYNC = DSReg(0x180, 3, 0, 1, 0, "readonly", "IPCSYNC_Data_from_IPCSYNC", Regs_Arm7.data);
    IPCSYNC_Data_to_IPCSYNC = DSReg(0x180, 11, 8, 1, 0, "readwrite", "IPCSYNC_Data_to_IPCSYNC", Regs_Arm7.data);
    IPCSYNC_IRQ_to_remote_CPU = DSReg(0x180, 13, 13, 1, 0, "writeonly", "IPCSYNC_IRQ_to_remote_CPU", Regs_Arm7.data);
    IPCSYNC_Ena_IRQ_from_remote_CPU = DSReg(0x180, 14, 14, 1, 0, "readwrite", "IPCSYNC_Ena_IRQ_from_remote_CPU", Regs_Arm7.data);
    IPCFIFOCNT = DSReg(0x184, 15, 0, 1, 0, "writeonly", "IPCFIFOCNT", Regs_Arm7.data);
    IPCFIFOCNT_Send_Fifo_Empty_Status = DSReg(0x184, 0, 0, 1, 0, "readonly", "IPCFIFOCNT_Send_Fifo_Empty_Status", Regs_Arm7.data);
    IPCFIFOCNT_Send_Fifo_Full_Status = DSReg(0x184, 1, 1, 1, 0, "readonly", "IPCFIFOCNT_Send_Fifo_Full_Status", Regs_Arm7.data);
    IPCFIFOCNT_Send_Fifo_Empty_IRQ = DSReg(0x184, 2, 2, 1, 0, "readwrite", "IPCFIFOCNT_Send_Fifo_Empty_IRQ", Regs_Arm7.data);
    IPCFIFOCNT_Send_Fifo_Clear = DSReg(0x184, 3, 3, 1, 0, "writeonly", "IPCFIFOCNT_Send_Fifo_Clear", Regs_Arm7.data);
    IPCFIFOCNT_Receive_Fifo_Empty = DSReg(0x184, 8, 8, 1, 0, "readonly", "IPCFIFOCNT_Receive_Fifo_Empty", Regs_Arm7.data);
    IPCFIFOCNT_Receive_Fifo_Full = DSReg(0x184, 9, 9, 1, 0, "readonly", "IPCFIFOCNT_Receive_Fifo_Full", Regs_Arm7.data);
    IPCFIFOCNT_Receive_Fifo_Not_Empty_IRQ = DSReg(0x184, 10, 10, 1, 0, "readwrite", "IPCFIFOCNT_Receive_Fifo_Not_Empty_IRQ", Regs_Arm7.data);
    IPCFIFOCNT_Error_Read_Empty_Send_Full = DSReg(0x184, 14, 14, 1, 0, "readwrite", "IPCFIFOCNT_Error_Read_Empty_Send_Full", Regs_Arm7.data);
    IPCFIFOCNT_Enable_Send_Receive_Fifo = DSReg(0x184, 15, 15, 1, 0, "readwrite", "IPCFIFOCNT_Enable_Send_Receive_Fifo", Regs_Arm7.data);
    IPCFIFOSEND = DSReg(0x188, 31, 0, 1, 0, "writeonly", "IPCFIFOSEND", Regs_Arm7.data);
    IPCFIFORECV = DSReg(0xFFF, 31, 0, 1, 0, "readonly", "IPCFIFORECV", Regs_Arm7.data);
    AUXSPICNT = DSReg(0x1A0, 23, 0, 1, 0, "writeonly", "AUXSPICNT", Regs_Arm7.data);
    AUXSPICNT_SPI_Baudrate = DSReg(0x1A0, 1, 0, 1, 0, "readwrite", "AUXSPICNT_SPI_Baudrate", Regs_Arm7.data);
    AUXSPICNT_SPI_Hold_Chipselect = DSReg(0x1A0, 6, 6, 1, 0, "readwrite", "AUXSPICNT_SPI_Hold_Chipselect", Regs_Arm7.data);
    AUXSPICNT_SPI_Busy = DSReg(0x1A0, 7, 7, 1, 0, "readonly", "AUXSPICNT_SPI_Busy", Regs_Arm7.data);
    AUXSPICNT_NDS_Slot_Mode = DSReg(0x1A0, 13, 13, 1, 0, "readwrite", "AUXSPICNT_NDS_Slot_Mode", Regs_Arm7.data);
    AUXSPICNT_Transfer_Ready_IRQ = DSReg(0x1A0, 14, 14, 1, 0, "readwrite", "AUXSPICNT_Transfer_Ready_IRQ", Regs_Arm7.data);
    AUXSPICNT_NDS_Slot_Enable = DSReg(0x1A0, 15, 15, 1, 0, "readwrite", "AUXSPICNT_NDS_Slot_Enable", Regs_Arm7.data);
    AUXSPIDATA = DSReg(0x1A0, 23, 16, 1, 0, "readwrite", "AUXSPIDATA", Regs_Arm7.data);
    ROMCTRL = DSReg(0x1A4, 31, 0, 1, 0, "writeonly", "ROMCTRL", Regs_Arm7.data);
    ROMCTRL_KEY1_gap1_length = DSReg(0x1A4, 12, 0, 1, 0, "readwrite", "ROMCTRL_KEY1_gap1_length", Regs_Arm7.data);
    ROMCTRL_KEY2_encrypt_data = DSReg(0x1A4, 13, 13, 1, 0, "readwrite", "ROMCTRL_KEY2_encrypt_data", Regs_Arm7.data);
    ROMCTRL_SE = DSReg(0x1A4, 14, 14, 1, 0, "readwrite", "ROMCTRL_SE", Regs_Arm7.data);
    ROMCTRL_KEY2_Apply_Seed = DSReg(0x1A4, 15, 15, 1, 0, "readwrite", "ROMCTRL_KEY2_Apply_Seed", Regs_Arm7.data);
    ROMCTRL_KEY1_gap2_length = DSReg(0x1A4, 21, 16, 1, 0, "readwrite", "ROMCTRL_KEY1_gap2_length", Regs_Arm7.data);
    ROMCTRL_KEY2_encrypt_cmd = DSReg(0x1A4, 22, 22, 1, 0, "readwrite", "ROMCTRL_KEY2_encrypt_cmd", Regs_Arm7.data);
    ROMCTRL_Data_Word_Status = DSReg(0x1A4, 23, 23, 1, 0, "readwrite", "ROMCTRL_Data_Word_Status", Regs_Arm7.data);
    ROMCTRL_Data_Block_size = DSReg(0x1A4, 26, 24, 1, 0, "readwrite", "ROMCTRL_Data_Block_size", Regs_Arm7.data);
    ROMCTRL_Transfer_CLK_rate = DSReg(0x1A4, 27, 27, 1, 0, "readwrite", "ROMCTRL_Transfer_CLK_rate", Regs_Arm7.data);
    ROMCTRL_KEY1_Gap_CLKs = DSReg(0x1A4, 28, 28, 1, 0, "readwrite", "ROMCTRL_KEY1_Gap_CLKs", Regs_Arm7.data);
    ROMCTRL_RESB_Release_Reset = DSReg(0x1A4, 29, 29, 1, 0, "readwrite", "ROMCTRL_RESB_Release_Reset", Regs_Arm7.data);
    ROMCTRL_WR = DSReg(0x1A4, 30, 30, 1, 0, "readwrite", "ROMCTRL_WR", Regs_Arm7.data);
    ROMCTRL_Block_Start_Status = DSReg(0x1A4, 31, 31, 1, 0, "readwrite", "ROMCTRL_Block_Start_Status", Regs_Arm7.data);
    Gamecard_bus_Command_1 = DSReg(0x1A8, 31, 0, 1, 0, "writeonly", "Gamecard_bus_Command_1", Regs_Arm7.data);
    Gamecard_bus_Command_2 = DSReg(0x1AC, 31, 0, 1, 0, "writeonly", "Gamecard_bus_Command_2", Regs_Arm7.data);
    Gamecard_bus_DataIn = DSReg(0xFFF, 31, 0, 1, 0, "readonly", "Gamecard_bus_DataIn", Regs_Arm7.data);
    Encryption_Seed_0_Lower = DSReg(0x1B0, 31, 0, 1, 0, "writeonly", "Encryption_Seed_0_Lower", Regs_Arm7.data);
    Encryption_Seed_1_Lower = DSReg(0x1B4, 31, 0, 1, 0, "writeonly", "Encryption_Seed_1_Lower", Regs_Arm7.data);
    Encryption_Seed_0_Upper = DSReg(0x1B8, 6, 0, 1, 0, "writeonly", "Encryption_Seed_0_Upper", Regs_Arm7.data);
    Encryption_Seed_1_Upper = DSReg(0x1B8, 22, 16, 1, 0, "writeonly", "Encryption_Seed_1_Upper", Regs_Arm7.data);
    SPICNT = DSReg(0x1C0, 23, 0, 1, 0, "writeonly", "SPICNT", Regs_Arm7.data);
    SPICNT_Baudrate = DSReg(0x1C0, 1, 0, 1, 0, "readwrite", "SPICNT_Baudrate", Regs_Arm7.data);
    SPICNT_Busy_Flag = DSReg(0x1C0, 7, 7, 1, 0, "readonly", "SPICNT_Busy_Flag", Regs_Arm7.data);
    SPICNT_Device_Select = DSReg(0x1C0, 9, 8, 1, 0, "readwrite", "SPICNT_Device_Select", Regs_Arm7.data);
    SPICNT_Transfer_Size = DSReg(0x1C0, 10, 10, 1, 0, "readwrite", "SPICNT_Transfer_Size", Regs_Arm7.data);
    SPICNT_Chipselect_Hold = DSReg(0x1C0, 11, 11, 1, 0, "readwrite", "SPICNT_Chipselect_Hold", Regs_Arm7.data);
    SPICNT_Interrupt_Request = DSReg(0x1C0, 14, 14, 1, 0, "readwrite", "SPICNT_Interrupt_Request", Regs_Arm7.data);
    SPICNT_SPI_Bus_Enable = DSReg(0x1C0, 15, 15, 1, 0, "readwrite", "SPICNT_SPI_Bus_Enable", Regs_Arm7.data);
    SPIDATA = DSReg(0x1C0, 23, 16, 1, 0, "readwrite", "SPIDATA", Regs_Arm7.data);
    SPIDATA_Power_Down_Mode = DSReg(0x1C0, 17, 16, 1, 0, "readwrite", "SPIDATA_Power_Down_Mode", Regs_Arm7.data);
    SPIDATA_Reference_Select = DSReg(0x1C0, 18, 18, 1, 0, "readwrite", "SPIDATA_Reference_Select", Regs_Arm7.data);
    SPIDATA_Conversion_Mode = DSReg(0x1C0, 20, 19, 1, 0, "readwrite", "SPIDATA_Conversion_Mode", Regs_Arm7.data);
    SPIDATA_Channel_Select = DSReg(0x1C0, 22, 20, 1, 0, "readwrite", "SPIDATA_Channel_Select", Regs_Arm7.data);
    SPIDATA_Start_Bit = DSReg(0x1C0, 23, 23, 1, 0, "readwrite", "SPIDATA_Start_Bit", Regs_Arm7.data);
    EXMEMSTAT = DSReg(0x204, 29, 0, 1, 0, "readwrite", "EXMEMSTAT", Regs_Arm7.data);
    EXMEMSTAT_GBASlot_SRAM_Access_Time = DSReg(0x204, 1, 0, 1, 0, "readwrite", "EXMEMSTAT_GBASlot_SRAM_Access_Time", Regs_Arm7.data);
    EXMEMSTAT_GBASlot_ROM_1st_Access_Time = DSReg(0x204, 3, 2, 1, 0, "readwrite", "EXMEMSTAT_GBASlot_ROM_1st_Access_Time", Regs_Arm7.data);
    EXMEMSTAT_GBASlot_ROM_2nd_Access_Time = DSReg(0x204, 4, 4, 1, 0, "readwrite", "EXMEMSTAT_GBASlot_ROM_2nd_Access_Time", Regs_Arm7.data);
    EXMEMSTAT_GBASlot_PHI_pin_out = DSReg(0x204, 6, 5, 1, 0, "readwrite", "EXMEMSTAT_GBASlot_PHI_pin_out", Regs_Arm7.data);
    EXMEMSTAT_GBASlot_Access_Rights = DSReg(0x204, 7, 7, 1, 0, "readonly", "EXMEMSTAT_GBASlot_Access_Rights", Regs_Arm7.data);
    EXMEMSTAT_NDSSlot_Access_Rights = DSReg(0x204, 11, 11, 1, 0, "readonly", "EXMEMSTAT_NDSSlot_Access_Rights", Regs_Arm7.data);
    EXMEMSTAT_SET = DSReg(0x204, 13, 13, 1, 0, "readonly", "EXMEMSTAT_SET", Regs_Arm7.data);
    EXMEMSTAT_MainMem_Interface_Mode = DSReg(0x204, 14, 14, 1, 0, "readonly", "EXMEMSTAT_MainMem_Interface_Mode", Regs_Arm7.data);
    EXMEMSTAT_MainMem_Access_Priority = DSReg(0x204, 15, 15, 1, 0, "readonly", "EXMEMSTAT_MainMem_Access_Priority", Regs_Arm7.data);
    WIFIWAITCNT = DSReg(0x204, 29, 24, 1, 0, "readwrite", "WIFIWAITCNT", Regs_Arm7.data);
    WIFIWAITCNT_WS0 = DSReg(0x204, 26, 24, 1, 0, "readwrite", "WIFIWAITCNT_WS0", Regs_Arm7.data);
    WIFIWAITCNT_WS1 = DSReg(0x204, 29, 27, 1, 0, "readwrite", "WIFIWAITCNT_WS1", Regs_Arm7.data);
    IME = DSReg(0x208, 31, 0, 1, 0, "readwrite", "IME", Regs_Arm7.data);
    IE = DSReg(0x210, 31, 0, 1, 0, "writeonly", "IE", Regs_Arm7.data);
    IE_LCD_V_Blank = DSReg(0x210, 0, 0, 1, 0, "readwrite", "IE_LCD_V_Blank", Regs_Arm7.data);
    IE_LCD_H_Blank = DSReg(0x210, 1, 1, 1, 0, "readwrite", "IE_LCD_H_Blank", Regs_Arm7.data);
    IE_LCD_V_Counter_Match = DSReg(0x210, 2, 2, 1, 0, "readwrite", "IE_LCD_V_Counter_Match", Regs_Arm7.data);
    IE_Timer_0 = DSReg(0x210, 3, 3, 1, 0, "readwrite", "IE_Timer_0", Regs_Arm7.data);
    IE_Timer_1 = DSReg(0x210, 4, 4, 1, 0, "readwrite", "IE_Timer_1", Regs_Arm7.data);
    IE_Timer_2 = DSReg(0x210, 5, 5, 1, 0, "readwrite", "IE_Timer_2", Regs_Arm7.data);
    IE_Timer_3 = DSReg(0x210, 6, 6, 1, 0, "readwrite", "IE_Timer_3", Regs_Arm7.data);
    IE_SIO_RCNT_RTC = DSReg(0x210, 7, 7, 1, 0, "readwrite", "IE_SIO_RCNT_RTC", Regs_Arm7.data);
    IE_DMA_0 = DSReg(0x210, 8, 8, 1, 0, "readwrite", "IE_DMA_0", Regs_Arm7.data);
    IE_DMA_1 = DSReg(0x210, 9, 9, 1, 0, "readwrite", "IE_DMA_1", Regs_Arm7.data);
    IE_DMA_2 = DSReg(0x210, 10, 10, 1, 0, "readwrite", "IE_DMA_2", Regs_Arm7.data);
    IE_DMA_3 = DSReg(0x210, 11, 11, 1, 0, "readwrite", "IE_DMA_3", Regs_Arm7.data);
    IE_Keypad = DSReg(0x210, 12, 12, 1, 0, "readwrite", "IE_Keypad", Regs_Arm7.data);
    IE_GBA_Slot_external_IRQ = DSReg(0x210, 13, 13, 1, 0, "readwrite", "IE_GBA_Slot_external_IRQ", Regs_Arm7.data);
    IE_IPC_Sync = DSReg(0x210, 16, 16, 1, 0, "readwrite", "IE_IPC_Sync", Regs_Arm7.data);
    IE_IPC_Send_FIFO_Empty = DSReg(0x210, 17, 17, 1, 0, "readwrite", "IE_IPC_Send_FIFO_Empty", Regs_Arm7.data);
    IE_IPC_Recv_FIFO_Not_Empty = DSReg(0x210, 18, 18, 1, 0, "readwrite", "IE_IPC_Recv_FIFO_Not_Empty", Regs_Arm7.data);
    IE_NDS_Slot_Transfer_Complete = DSReg(0x210, 19, 19, 1, 0, "readwrite", "IE_NDS_Slot_Transfer_Complete", Regs_Arm7.data);
    IE_NDS_Slot_IREQ_MC = DSReg(0x210, 20, 20, 1, 0, "readwrite", "IE_NDS_Slot_IREQ_MC", Regs_Arm7.data);
    IE_Screens_unfolding = DSReg(0x210, 22, 22, 1, 0, "readwrite", "IE_Screens_unfolding", Regs_Arm7.data);
    IE_SPI_bus = DSReg(0x210, 23, 23, 1, 0, "readwrite", "IE_SPI_bus", Regs_Arm7.data);
    IE_Wifi = DSReg(0x210, 24, 24, 1, 0, "readwrite", "IE_Wifi", Regs_Arm7.data);
    IE_unused = DSReg(0x210, 31, 25, 1, 0, "readwrite", "IE_unused", Regs_Arm7.data);
    IF = DSReg(0x214, 24, 0, 1, 0, "writeonly", "IF", Regs_Arm7.data);
    IF_LCD_V_Blank = DSReg(0x214, 0, 0, 1, 0, "readwrite", "IF_LCD_V_Blank", Regs_Arm7.data);
    IF_LCD_H_Blank = DSReg(0x214, 1, 1, 1, 0, "readwrite", "IF_LCD_H_Blank", Regs_Arm7.data);
    IF_LCD_V_Counter_Match = DSReg(0x214, 2, 2, 1, 0, "readwrite", "IF_LCD_V_Counter_Match", Regs_Arm7.data);
    IF_Timer_0 = DSReg(0x214, 3, 3, 1, 0, "readwrite", "IF_Timer_0", Regs_Arm7.data);
    IF_Timer_1 = DSReg(0x214, 4, 4, 1, 0, "readwrite", "IF_Timer_1", Regs_Arm7.data);
    IF_Timer_2 = DSReg(0x214, 5, 5, 1, 0, "readwrite", "IF_Timer_2", Regs_Arm7.data);
    IF_Timer_3 = DSReg(0x214, 6, 6, 1, 0, "readwrite", "IF_Timer_3", Regs_Arm7.data);
    IF_SIO_RCNT_RTC = DSReg(0x214, 7, 7, 1, 0, "readwrite", "IF_SIO_RCNT_RTC", Regs_Arm7.data);
    IF_DMA_0 = DSReg(0x214, 8, 8, 1, 0, "readwrite", "IF_DMA_0", Regs_Arm7.data);
    IF_DMA_1 = DSReg(0x214, 9, 9, 1, 0, "readwrite", "IF_DMA_1", Regs_Arm7.data);
    IF_DMA_2 = DSReg(0x214, 10, 10, 1, 0, "readwrite", "IF_DMA_2", Regs_Arm7.data);
    IF_DMA_3 = DSReg(0x214, 11, 11, 1, 0, "readwrite", "IF_DMA_3", Regs_Arm7.data);
    IF_Keypad = DSReg(0x214, 12, 12, 1, 0, "readwrite", "IF_Keypad", Regs_Arm7.data);
    IF_GBA_Slot_external_IRQ = DSReg(0x214, 13, 13, 1, 0, "readwrite", "IF_GBA_Slot_external_IRQ", Regs_Arm7.data);
    IF_IPC_Sync = DSReg(0x214, 16, 16, 1, 0, "readwrite", "IF_IPC_Sync", Regs_Arm7.data);
    IF_IPC_Send_FIFO_Empty = DSReg(0x214, 17, 17, 1, 0, "readwrite", "IF_IPC_Send_FIFO_Empty", Regs_Arm7.data);
    IF_IPC_Recv_FIFO_Not_Empty = DSReg(0x214, 18, 18, 1, 0, "readwrite", "IF_IPC_Recv_FIFO_Not_Empty", Regs_Arm7.data);
    IF_NDS_Slot_Transfer_Complete = DSReg(0x214, 19, 19, 1, 0, "readwrite", "IF_NDS_Slot_Transfer_Complete", Regs_Arm7.data);
    IF_NDS_Slot_IREQ_MC = DSReg(0x214, 20, 20, 1, 0, "readwrite", "IF_NDS_Slot_IREQ_MC", Regs_Arm7.data);
    IF_Screens_unfolding = DSReg(0x214, 22, 22, 1, 0, "writeonly", "IF_Screens_unfolding", Regs_Arm7.data);
    IF_SPI_bus = DSReg(0x214, 23, 23, 1, 0, "writeonly", "IF_SPI_bus", Regs_Arm7.data);
    IF_Wifi = DSReg(0x214, 24, 24, 1, 0, "writeonly", "IF_Wifi", Regs_Arm7.data);
    RAMSTAT = DSReg(0x240, 9, 0, 1, 0, "readonly", "RAMSTAT", Regs_Arm7.data);
    RAMSTAT_VRAMSTAT_C = DSReg(0x240, 0, 0, 1, 0, "readonly", "RAMSTAT_VRAMSTAT_C", Regs_Arm7.data);
    RAMSTAT_VRAMSTAT_D = DSReg(0x240, 1, 1, 1, 0, "readonly", "RAMSTAT_VRAMSTAT_D", Regs_Arm7.data);
    MemControl2_WRAM = DSReg(0x240, 9, 8, 1, 3, "readonly", "MemControl2_WRAM", Regs_Arm7.data);
    POSTFLG = DSReg(0x300, 15, 0, 1, 0, "writeonly", "POSTFLG", Regs_Arm7.data);
    POSTFLG_Flag = DSReg(0x300, 0, 0, 1, 1, "readonly", "POSTFLG_Flag", Regs_Arm7.data);
    POSTFLG_Power_Down_Mode = DSReg(0x300, 15, 14, 1, 0, "readwrite", "POSTFLG_Power_Down_Mode", Regs_Arm7.data);
    POWCNT2 = DSReg(0x304, 1, 0, 1, 0, "writeonly", "POWCNT2", Regs_Arm7.data);
    POWCNT2_Sound = DSReg(0x304, 0, 0, 1, 1, "readwrite", "POWCNT2_Sound", Regs_Arm7.data);
    POWCNT2_Wifi = DSReg(0x304, 1, 1, 1, 0, "readwrite", "POWCNT2_Wifi", Regs_Arm7.data);
    BIOSPROT = DSReg(0x308, 15, 0, 1, 0x1205, "readonly", "BIOSPROT", Regs_Arm7.data);
}

void REGS_Arm7::reset()
{
      allregs[0] = Regs_Arm7.Sect_display7.DISPSTAT;
      allregs[1] = Regs_Arm7.Sect_display7.DISPSTAT_V_Blank_flag;
      allregs[2] = Regs_Arm7.Sect_display7.DISPSTAT_H_Blank_flag;
      allregs[3] = Regs_Arm7.Sect_display7.DISPSTAT_V_Counter_flag;
      allregs[4] = Regs_Arm7.Sect_display7.DISPSTAT_V_Blank_IRQ_Enable;
      allregs[5] = Regs_Arm7.Sect_display7.DISPSTAT_H_Blank_IRQ_Enable;
      allregs[6] = Regs_Arm7.Sect_display7.DISPSTAT_V_Counter_IRQ_Enable;
      allregs[7] = Regs_Arm7.Sect_display7.DISPSTAT_V_Count_Setting8;
      allregs[8] = Regs_Arm7.Sect_display7.DISPSTAT_V_Count_Setting;
      allregs[9] = Regs_Arm7.Sect_display7.VCOUNT;
      allregs[10] = Regs_Arm7.Sect_sound7.SOUND0CNT;
      allregs[11] = Regs_Arm7.Sect_sound7.SOUND0CNT_Volume_Mul;
      allregs[12] = Regs_Arm7.Sect_sound7.SOUND0CNT_Volume_Div;
      allregs[13] = Regs_Arm7.Sect_sound7.SOUND0CNT_Hold;
      allregs[14] = Regs_Arm7.Sect_sound7.SOUND0CNT_Panning;
      allregs[15] = Regs_Arm7.Sect_sound7.SOUND0CNT_Wave_Duty;
      allregs[16] = Regs_Arm7.Sect_sound7.SOUND0CNT_Repeat_Mode;
      allregs[17] = Regs_Arm7.Sect_sound7.SOUND0CNT_Format;
      allregs[18] = Regs_Arm7.Sect_sound7.SOUND0CNT_Start_Status;
      allregs[19] = Regs_Arm7.Sect_sound7.SOUND0SAD;
      allregs[20] = Regs_Arm7.Sect_sound7.SOUND0TMR;
      allregs[21] = Regs_Arm7.Sect_sound7.SOUND0PNT;
      allregs[22] = Regs_Arm7.Sect_sound7.SOUND0LEN;
      allregs[23] = Regs_Arm7.Sect_sound7.SOUND1CNT;
      allregs[24] = Regs_Arm7.Sect_sound7.SOUND1CNT_Volume_Mul;
      allregs[25] = Regs_Arm7.Sect_sound7.SOUND1CNT_Volume_Div;
      allregs[26] = Regs_Arm7.Sect_sound7.SOUND1CNT_Hold;
      allregs[27] = Regs_Arm7.Sect_sound7.SOUND1CNT_Panning;
      allregs[28] = Regs_Arm7.Sect_sound7.SOUND1CNT_Wave_Duty;
      allregs[29] = Regs_Arm7.Sect_sound7.SOUND1CNT_Repeat_Mode;
      allregs[30] = Regs_Arm7.Sect_sound7.SOUND1CNT_Format;
      allregs[31] = Regs_Arm7.Sect_sound7.SOUND1CNT_Start_Status;
      allregs[32] = Regs_Arm7.Sect_sound7.SOUND1SAD;
      allregs[33] = Regs_Arm7.Sect_sound7.SOUND1TMR;
      allregs[34] = Regs_Arm7.Sect_sound7.SOUND1PNT;
      allregs[35] = Regs_Arm7.Sect_sound7.SOUND1LEN;
      allregs[36] = Regs_Arm7.Sect_sound7.SOUND2CNT;
      allregs[37] = Regs_Arm7.Sect_sound7.SOUND2CNT_Volume_Mul;
      allregs[38] = Regs_Arm7.Sect_sound7.SOUND2CNT_Volume_Div;
      allregs[39] = Regs_Arm7.Sect_sound7.SOUND2CNT_Hold;
      allregs[40] = Regs_Arm7.Sect_sound7.SOUND2CNT_Panning;
      allregs[41] = Regs_Arm7.Sect_sound7.SOUND2CNT_Wave_Duty;
      allregs[42] = Regs_Arm7.Sect_sound7.SOUND2CNT_Repeat_Mode;
      allregs[43] = Regs_Arm7.Sect_sound7.SOUND2CNT_Format;
      allregs[44] = Regs_Arm7.Sect_sound7.SOUND2CNT_Start_Status;
      allregs[45] = Regs_Arm7.Sect_sound7.SOUND2SAD;
      allregs[46] = Regs_Arm7.Sect_sound7.SOUND2TMR;
      allregs[47] = Regs_Arm7.Sect_sound7.SOUND2PNT;
      allregs[48] = Regs_Arm7.Sect_sound7.SOUND2LEN;
      allregs[49] = Regs_Arm7.Sect_sound7.SOUND3CNT;
      allregs[50] = Regs_Arm7.Sect_sound7.SOUND3CNT_Volume_Mul;
      allregs[51] = Regs_Arm7.Sect_sound7.SOUND3CNT_Volume_Div;
      allregs[52] = Regs_Arm7.Sect_sound7.SOUND3CNT_Hold;
      allregs[53] = Regs_Arm7.Sect_sound7.SOUND3CNT_Panning;
      allregs[54] = Regs_Arm7.Sect_sound7.SOUND3CNT_Wave_Duty;
      allregs[55] = Regs_Arm7.Sect_sound7.SOUND3CNT_Repeat_Mode;
      allregs[56] = Regs_Arm7.Sect_sound7.SOUND3CNT_Format;
      allregs[57] = Regs_Arm7.Sect_sound7.SOUND3CNT_Start_Status;
      allregs[58] = Regs_Arm7.Sect_sound7.SOUND3SAD;
      allregs[59] = Regs_Arm7.Sect_sound7.SOUND3TMR;
      allregs[60] = Regs_Arm7.Sect_sound7.SOUND3PNT;
      allregs[61] = Regs_Arm7.Sect_sound7.SOUND3LEN;
      allregs[62] = Regs_Arm7.Sect_sound7.SOUND4CNT;
      allregs[63] = Regs_Arm7.Sect_sound7.SOUND4CNT_Volume_Mul;
      allregs[64] = Regs_Arm7.Sect_sound7.SOUND4CNT_Volume_Div;
      allregs[65] = Regs_Arm7.Sect_sound7.SOUND4CNT_Hold;
      allregs[66] = Regs_Arm7.Sect_sound7.SOUND4CNT_Panning;
      allregs[67] = Regs_Arm7.Sect_sound7.SOUND4CNT_Wave_Duty;
      allregs[68] = Regs_Arm7.Sect_sound7.SOUND4CNT_Repeat_Mode;
      allregs[69] = Regs_Arm7.Sect_sound7.SOUND4CNT_Format;
      allregs[70] = Regs_Arm7.Sect_sound7.SOUND4CNT_Start_Status;
      allregs[71] = Regs_Arm7.Sect_sound7.SOUND4SAD;
      allregs[72] = Regs_Arm7.Sect_sound7.SOUND4TMR;
      allregs[73] = Regs_Arm7.Sect_sound7.SOUND4PNT;
      allregs[74] = Regs_Arm7.Sect_sound7.SOUND4LEN;
      allregs[75] = Regs_Arm7.Sect_sound7.SOUND5CNT;
      allregs[76] = Regs_Arm7.Sect_sound7.SOUND5CNT_Volume_Mul;
      allregs[77] = Regs_Arm7.Sect_sound7.SOUND5CNT_Volume_Div;
      allregs[78] = Regs_Arm7.Sect_sound7.SOUND5CNT_Hold;
      allregs[79] = Regs_Arm7.Sect_sound7.SOUND5CNT_Panning;
      allregs[80] = Regs_Arm7.Sect_sound7.SOUND5CNT_Wave_Duty;
      allregs[81] = Regs_Arm7.Sect_sound7.SOUND5CNT_Repeat_Mode;
      allregs[82] = Regs_Arm7.Sect_sound7.SOUND5CNT_Format;
      allregs[83] = Regs_Arm7.Sect_sound7.SOUND5CNT_Start_Status;
      allregs[84] = Regs_Arm7.Sect_sound7.SOUND5SAD;
      allregs[85] = Regs_Arm7.Sect_sound7.SOUND5TMR;
      allregs[86] = Regs_Arm7.Sect_sound7.SOUND5PNT;
      allregs[87] = Regs_Arm7.Sect_sound7.SOUND5LEN;
      allregs[88] = Regs_Arm7.Sect_sound7.SOUND6CNT;
      allregs[89] = Regs_Arm7.Sect_sound7.SOUND6CNT_Volume_Mul;
      allregs[90] = Regs_Arm7.Sect_sound7.SOUND6CNT_Volume_Div;
      allregs[91] = Regs_Arm7.Sect_sound7.SOUND6CNT_Hold;
      allregs[92] = Regs_Arm7.Sect_sound7.SOUND6CNT_Panning;
      allregs[93] = Regs_Arm7.Sect_sound7.SOUND6CNT_Wave_Duty;
      allregs[94] = Regs_Arm7.Sect_sound7.SOUND6CNT_Repeat_Mode;
      allregs[95] = Regs_Arm7.Sect_sound7.SOUND6CNT_Format;
      allregs[96] = Regs_Arm7.Sect_sound7.SOUND6CNT_Start_Status;
      allregs[97] = Regs_Arm7.Sect_sound7.SOUND6SAD;
      allregs[98] = Regs_Arm7.Sect_sound7.SOUND6TMR;
      allregs[99] = Regs_Arm7.Sect_sound7.SOUND6PNT;
      allregs[100] = Regs_Arm7.Sect_sound7.SOUND6LEN;
      allregs[101] = Regs_Arm7.Sect_sound7.SOUND7CNT;
      allregs[102] = Regs_Arm7.Sect_sound7.SOUND7CNT_Volume_Mul;
      allregs[103] = Regs_Arm7.Sect_sound7.SOUND7CNT_Volume_Div;
      allregs[104] = Regs_Arm7.Sect_sound7.SOUND7CNT_Hold;
      allregs[105] = Regs_Arm7.Sect_sound7.SOUND7CNT_Panning;
      allregs[106] = Regs_Arm7.Sect_sound7.SOUND7CNT_Wave_Duty;
      allregs[107] = Regs_Arm7.Sect_sound7.SOUND7CNT_Repeat_Mode;
      allregs[108] = Regs_Arm7.Sect_sound7.SOUND7CNT_Format;
      allregs[109] = Regs_Arm7.Sect_sound7.SOUND7CNT_Start_Status;
      allregs[110] = Regs_Arm7.Sect_sound7.SOUND7SAD;
      allregs[111] = Regs_Arm7.Sect_sound7.SOUND7TMR;
      allregs[112] = Regs_Arm7.Sect_sound7.SOUND7PNT;
      allregs[113] = Regs_Arm7.Sect_sound7.SOUND7LEN;
      allregs[114] = Regs_Arm7.Sect_sound7.SOUND8CNT;
      allregs[115] = Regs_Arm7.Sect_sound7.SOUND8CNT_Volume_Mul;
      allregs[116] = Regs_Arm7.Sect_sound7.SOUND8CNT_Volume_Div;
      allregs[117] = Regs_Arm7.Sect_sound7.SOUND8CNT_Hold;
      allregs[118] = Regs_Arm7.Sect_sound7.SOUND8CNT_Panning;
      allregs[119] = Regs_Arm7.Sect_sound7.SOUND8CNT_Wave_Duty;
      allregs[120] = Regs_Arm7.Sect_sound7.SOUND8CNT_Repeat_Mode;
      allregs[121] = Regs_Arm7.Sect_sound7.SOUND8CNT_Format;
      allregs[122] = Regs_Arm7.Sect_sound7.SOUND8CNT_Start_Status;
      allregs[123] = Regs_Arm7.Sect_sound7.SOUND8SAD;
      allregs[124] = Regs_Arm7.Sect_sound7.SOUND8TMR;
      allregs[125] = Regs_Arm7.Sect_sound7.SOUND8PNT;
      allregs[126] = Regs_Arm7.Sect_sound7.SOUND8LEN;
      allregs[127] = Regs_Arm7.Sect_sound7.SOUND9CNT;
      allregs[128] = Regs_Arm7.Sect_sound7.SOUND9CNT_Volume_Mul;
      allregs[129] = Regs_Arm7.Sect_sound7.SOUND9CNT_Volume_Div;
      allregs[130] = Regs_Arm7.Sect_sound7.SOUND9CNT_Hold;
      allregs[131] = Regs_Arm7.Sect_sound7.SOUND9CNT_Panning;
      allregs[132] = Regs_Arm7.Sect_sound7.SOUND9CNT_Wave_Duty;
      allregs[133] = Regs_Arm7.Sect_sound7.SOUND9CNT_Repeat_Mode;
      allregs[134] = Regs_Arm7.Sect_sound7.SOUND9CNT_Format;
      allregs[135] = Regs_Arm7.Sect_sound7.SOUND9CNT_Start_Status;
      allregs[136] = Regs_Arm7.Sect_sound7.SOUND9SAD;
      allregs[137] = Regs_Arm7.Sect_sound7.SOUND9TMR;
      allregs[138] = Regs_Arm7.Sect_sound7.SOUND9PNT;
      allregs[139] = Regs_Arm7.Sect_sound7.SOUND9LEN;
      allregs[140] = Regs_Arm7.Sect_sound7.SOUND10CNT;
      allregs[141] = Regs_Arm7.Sect_sound7.SOUND10CNT_Volume_Mul;
      allregs[142] = Regs_Arm7.Sect_sound7.SOUND10CNT_Volume_Div;
      allregs[143] = Regs_Arm7.Sect_sound7.SOUND10CNT_Hold;
      allregs[144] = Regs_Arm7.Sect_sound7.SOUND10CNT_Panning;
      allregs[145] = Regs_Arm7.Sect_sound7.SOUND10CNT_Wave_Duty;
      allregs[146] = Regs_Arm7.Sect_sound7.SOUND10CNT_Repeat_Mode;
      allregs[147] = Regs_Arm7.Sect_sound7.SOUND10CNT_Format;
      allregs[148] = Regs_Arm7.Sect_sound7.SOUND10CNT_Start_Status;
      allregs[149] = Regs_Arm7.Sect_sound7.SOUND10SAD;
      allregs[150] = Regs_Arm7.Sect_sound7.SOUND10TMR;
      allregs[151] = Regs_Arm7.Sect_sound7.SOUND10PNT;
      allregs[152] = Regs_Arm7.Sect_sound7.SOUND10LEN;
      allregs[153] = Regs_Arm7.Sect_sound7.SOUND11CNT;
      allregs[154] = Regs_Arm7.Sect_sound7.SOUND11CNT_Volume_Mul;
      allregs[155] = Regs_Arm7.Sect_sound7.SOUND11CNT_Volume_Div;
      allregs[156] = Regs_Arm7.Sect_sound7.SOUND11CNT_Hold;
      allregs[157] = Regs_Arm7.Sect_sound7.SOUND11CNT_Panning;
      allregs[158] = Regs_Arm7.Sect_sound7.SOUND11CNT_Wave_Duty;
      allregs[159] = Regs_Arm7.Sect_sound7.SOUND11CNT_Repeat_Mode;
      allregs[160] = Regs_Arm7.Sect_sound7.SOUND11CNT_Format;
      allregs[161] = Regs_Arm7.Sect_sound7.SOUND11CNT_Start_Status;
      allregs[162] = Regs_Arm7.Sect_sound7.SOUND11SAD;
      allregs[163] = Regs_Arm7.Sect_sound7.SOUND11TMR;
      allregs[164] = Regs_Arm7.Sect_sound7.SOUND11PNT;
      allregs[165] = Regs_Arm7.Sect_sound7.SOUND11LEN;
      allregs[166] = Regs_Arm7.Sect_sound7.SOUND12CNT;
      allregs[167] = Regs_Arm7.Sect_sound7.SOUND12CNT_Volume_Mul;
      allregs[168] = Regs_Arm7.Sect_sound7.SOUND12CNT_Volume_Div;
      allregs[169] = Regs_Arm7.Sect_sound7.SOUND12CNT_Hold;
      allregs[170] = Regs_Arm7.Sect_sound7.SOUND12CNT_Panning;
      allregs[171] = Regs_Arm7.Sect_sound7.SOUND12CNT_Wave_Duty;
      allregs[172] = Regs_Arm7.Sect_sound7.SOUND12CNT_Repeat_Mode;
      allregs[173] = Regs_Arm7.Sect_sound7.SOUND12CNT_Format;
      allregs[174] = Regs_Arm7.Sect_sound7.SOUND12CNT_Start_Status;
      allregs[175] = Regs_Arm7.Sect_sound7.SOUND12SAD;
      allregs[176] = Regs_Arm7.Sect_sound7.SOUND12TMR;
      allregs[177] = Regs_Arm7.Sect_sound7.SOUND12PNT;
      allregs[178] = Regs_Arm7.Sect_sound7.SOUND12LEN;
      allregs[179] = Regs_Arm7.Sect_sound7.SOUND13CNT;
      allregs[180] = Regs_Arm7.Sect_sound7.SOUND13CNT_Volume_Mul;
      allregs[181] = Regs_Arm7.Sect_sound7.SOUND13CNT_Volume_Div;
      allregs[182] = Regs_Arm7.Sect_sound7.SOUND13CNT_Hold;
      allregs[183] = Regs_Arm7.Sect_sound7.SOUND13CNT_Panning;
      allregs[184] = Regs_Arm7.Sect_sound7.SOUND13CNT_Wave_Duty;
      allregs[185] = Regs_Arm7.Sect_sound7.SOUND13CNT_Repeat_Mode;
      allregs[186] = Regs_Arm7.Sect_sound7.SOUND13CNT_Format;
      allregs[187] = Regs_Arm7.Sect_sound7.SOUND13CNT_Start_Status;
      allregs[188] = Regs_Arm7.Sect_sound7.SOUND13SAD;
      allregs[189] = Regs_Arm7.Sect_sound7.SOUND13TMR;
      allregs[190] = Regs_Arm7.Sect_sound7.SOUND13PNT;
      allregs[191] = Regs_Arm7.Sect_sound7.SOUND13LEN;
      allregs[192] = Regs_Arm7.Sect_sound7.SOUND14CNT;
      allregs[193] = Regs_Arm7.Sect_sound7.SOUND14CNT_Volume_Mul;
      allregs[194] = Regs_Arm7.Sect_sound7.SOUND14CNT_Volume_Div;
      allregs[195] = Regs_Arm7.Sect_sound7.SOUND14CNT_Hold;
      allregs[196] = Regs_Arm7.Sect_sound7.SOUND14CNT_Panning;
      allregs[197] = Regs_Arm7.Sect_sound7.SOUND14CNT_Wave_Duty;
      allregs[198] = Regs_Arm7.Sect_sound7.SOUND14CNT_Repeat_Mode;
      allregs[199] = Regs_Arm7.Sect_sound7.SOUND14CNT_Format;
      allregs[200] = Regs_Arm7.Sect_sound7.SOUND14CNT_Start_Status;
      allregs[201] = Regs_Arm7.Sect_sound7.SOUND14SAD;
      allregs[202] = Regs_Arm7.Sect_sound7.SOUND14TMR;
      allregs[203] = Regs_Arm7.Sect_sound7.SOUND14PNT;
      allregs[204] = Regs_Arm7.Sect_sound7.SOUND14LEN;
      allregs[205] = Regs_Arm7.Sect_sound7.SOUND15CNT;
      allregs[206] = Regs_Arm7.Sect_sound7.SOUND15CNT_Volume_Mul;
      allregs[207] = Regs_Arm7.Sect_sound7.SOUND15CNT_Volume_Div;
      allregs[208] = Regs_Arm7.Sect_sound7.SOUND15CNT_Hold;
      allregs[209] = Regs_Arm7.Sect_sound7.SOUND15CNT_Panning;
      allregs[210] = Regs_Arm7.Sect_sound7.SOUND15CNT_Wave_Duty;
      allregs[211] = Regs_Arm7.Sect_sound7.SOUND15CNT_Repeat_Mode;
      allregs[212] = Regs_Arm7.Sect_sound7.SOUND15CNT_Format;
      allregs[213] = Regs_Arm7.Sect_sound7.SOUND15CNT_Start_Status;
      allregs[214] = Regs_Arm7.Sect_sound7.SOUND15SAD;
      allregs[215] = Regs_Arm7.Sect_sound7.SOUND15TMR;
      allregs[216] = Regs_Arm7.Sect_sound7.SOUND15PNT;
      allregs[217] = Regs_Arm7.Sect_sound7.SOUND15LEN;
      allregs[218] = Regs_Arm7.Sect_sound7.SOUNDCNT;
      allregs[219] = Regs_Arm7.Sect_sound7.SOUNDCNT_Master_Volume;
      allregs[220] = Regs_Arm7.Sect_sound7.SOUNDCNT_Left_Output_from;
      allregs[221] = Regs_Arm7.Sect_sound7.SOUNDCNT_Right_Output_from;
      allregs[222] = Regs_Arm7.Sect_sound7.SOUNDCNT_Output_Ch1_to_Mixer;
      allregs[223] = Regs_Arm7.Sect_sound7.SOUNDCNT_Output_Ch3_to_Mixer;
      allregs[224] = Regs_Arm7.Sect_sound7.SOUNDCNT_Master_Enable;
      allregs[225] = Regs_Arm7.Sect_sound7.SOUNDBIAS;
      allregs[226] = Regs_Arm7.Sect_sound7.SOUNDCAP;
      allregs[227] = Regs_Arm7.Sect_sound7.SOUNDCAP0_Control;
      allregs[228] = Regs_Arm7.Sect_sound7.SOUNDCAP0_Capture_Source;
      allregs[229] = Regs_Arm7.Sect_sound7.SOUNDCAP0_Capture_Repeat;
      allregs[230] = Regs_Arm7.Sect_sound7.SOUNDCAP0_Capture_Format;
      allregs[231] = Regs_Arm7.Sect_sound7.SOUNDCAP0_Capture_Start_Status;
      allregs[232] = Regs_Arm7.Sect_sound7.SOUNDCAP1_Control;
      allregs[233] = Regs_Arm7.Sect_sound7.SOUNDCAP1_Capture_Source;
      allregs[234] = Regs_Arm7.Sect_sound7.SOUNDCAP1_Capture_Repeat;
      allregs[235] = Regs_Arm7.Sect_sound7.SOUNDCAP1_Capture_Format;
      allregs[236] = Regs_Arm7.Sect_sound7.SOUNDCAP1_Capture_Start_Status;
      allregs[237] = Regs_Arm7.Sect_sound7.SNDCAP0DAD;
      allregs[238] = Regs_Arm7.Sect_sound7.SNDCAP0LEN;
      allregs[239] = Regs_Arm7.Sect_sound7.SNDCAP1DAD;
      allregs[240] = Regs_Arm7.Sect_sound7.SNDCAP1LEN;
      allregs[241] = Regs_Arm7.Sect_dma7.DMA0SAD;
      allregs[242] = Regs_Arm7.Sect_dma7.DMA0DAD;
      allregs[243] = Regs_Arm7.Sect_dma7.DMA0CNT_L;
      allregs[244] = Regs_Arm7.Sect_dma7.DMA0CNT_H;
      allregs[245] = Regs_Arm7.Sect_dma7.DMA0CNT_H_Dest_Addr_Control;
      allregs[246] = Regs_Arm7.Sect_dma7.DMA0CNT_H_Source_Adr_Control;
      allregs[247] = Regs_Arm7.Sect_dma7.DMA0CNT_H_DMA_Repeat;
      allregs[248] = Regs_Arm7.Sect_dma7.DMA0CNT_H_DMA_Transfer_Type;
      allregs[249] = Regs_Arm7.Sect_dma7.DMA0CNT_H_DMA_Start_Timing;
      allregs[250] = Regs_Arm7.Sect_dma7.DMA0CNT_H_IRQ_on;
      allregs[251] = Regs_Arm7.Sect_dma7.DMA0CNT_H_DMA_Enable;
      allregs[252] = Regs_Arm7.Sect_dma7.DMA1SAD;
      allregs[253] = Regs_Arm7.Sect_dma7.DMA1DAD;
      allregs[254] = Regs_Arm7.Sect_dma7.DMA1CNT_L;
      allregs[255] = Regs_Arm7.Sect_dma7.DMA1CNT_H;
      allregs[256] = Regs_Arm7.Sect_dma7.DMA1CNT_H_Dest_Addr_Control;
      allregs[257] = Regs_Arm7.Sect_dma7.DMA1CNT_H_Source_Adr_Control;
      allregs[258] = Regs_Arm7.Sect_dma7.DMA1CNT_H_DMA_Repeat;
      allregs[259] = Regs_Arm7.Sect_dma7.DMA1CNT_H_DMA_Transfer_Type;
      allregs[260] = Regs_Arm7.Sect_dma7.DMA1CNT_H_DMA_Start_Timing;
      allregs[261] = Regs_Arm7.Sect_dma7.DMA1CNT_H_IRQ_on;
      allregs[262] = Regs_Arm7.Sect_dma7.DMA1CNT_H_DMA_Enable;
      allregs[263] = Regs_Arm7.Sect_dma7.DMA2SAD;
      allregs[264] = Regs_Arm7.Sect_dma7.DMA2DAD;
      allregs[265] = Regs_Arm7.Sect_dma7.DMA2CNT_L;
      allregs[266] = Regs_Arm7.Sect_dma7.DMA2CNT_H;
      allregs[267] = Regs_Arm7.Sect_dma7.DMA2CNT_H_Dest_Addr_Control;
      allregs[268] = Regs_Arm7.Sect_dma7.DMA2CNT_H_Source_Adr_Control;
      allregs[269] = Regs_Arm7.Sect_dma7.DMA2CNT_H_DMA_Repeat;
      allregs[270] = Regs_Arm7.Sect_dma7.DMA2CNT_H_DMA_Transfer_Type;
      allregs[271] = Regs_Arm7.Sect_dma7.DMA2CNT_H_DMA_Start_Timing;
      allregs[272] = Regs_Arm7.Sect_dma7.DMA2CNT_H_IRQ_on;
      allregs[273] = Regs_Arm7.Sect_dma7.DMA2CNT_H_DMA_Enable;
      allregs[274] = Regs_Arm7.Sect_dma7.DMA3SAD;
      allregs[275] = Regs_Arm7.Sect_dma7.DMA3DAD;
      allregs[276] = Regs_Arm7.Sect_dma7.DMA3CNT_L;
      allregs[277] = Regs_Arm7.Sect_dma7.DMA3CNT_H;
      allregs[278] = Regs_Arm7.Sect_dma7.DMA3CNT_H_Dest_Addr_Control;
      allregs[279] = Regs_Arm7.Sect_dma7.DMA3CNT_H_Source_Adr_Control;
      allregs[280] = Regs_Arm7.Sect_dma7.DMA3CNT_H_DMA_Repeat;
      allregs[281] = Regs_Arm7.Sect_dma7.DMA3CNT_H_DMA_Transfer_Type;
      allregs[282] = Regs_Arm7.Sect_dma7.DMA3CNT_H_Game_Pak_DRQ;
      allregs[283] = Regs_Arm7.Sect_dma7.DMA3CNT_H_DMA_Start_Timing;
      allregs[284] = Regs_Arm7.Sect_dma7.DMA3CNT_H_IRQ_on;
      allregs[285] = Regs_Arm7.Sect_dma7.DMA3CNT_H_DMA_Enable;
      allregs[286] = Regs_Arm7.Sect_timer7.TM0CNT_L;
      allregs[287] = Regs_Arm7.Sect_timer7.TM0CNT_H;
      allregs[288] = Regs_Arm7.Sect_timer7.TM0CNT_H_Prescaler;
      allregs[289] = Regs_Arm7.Sect_timer7.TM0CNT_H_Count_up;
      allregs[290] = Regs_Arm7.Sect_timer7.TM0CNT_H_Timer_IRQ_Enable;
      allregs[291] = Regs_Arm7.Sect_timer7.TM0CNT_H_Timer_Start_Stop;
      allregs[292] = Regs_Arm7.Sect_timer7.TM1CNT_L;
      allregs[293] = Regs_Arm7.Sect_timer7.TM1CNT_H;
      allregs[294] = Regs_Arm7.Sect_timer7.TM1CNT_H_Prescaler;
      allregs[295] = Regs_Arm7.Sect_timer7.TM1CNT_H_Count_up;
      allregs[296] = Regs_Arm7.Sect_timer7.TM1CNT_H_Timer_IRQ_Enable;
      allregs[297] = Regs_Arm7.Sect_timer7.TM1CNT_H_Timer_Start_Stop;
      allregs[298] = Regs_Arm7.Sect_timer7.TM2CNT_L;
      allregs[299] = Regs_Arm7.Sect_timer7.TM2CNT_H;
      allregs[300] = Regs_Arm7.Sect_timer7.TM2CNT_H_Prescaler;
      allregs[301] = Regs_Arm7.Sect_timer7.TM2CNT_H_Count_up;
      allregs[302] = Regs_Arm7.Sect_timer7.TM2CNT_H_Timer_IRQ_Enable;
      allregs[303] = Regs_Arm7.Sect_timer7.TM2CNT_H_Timer_Start_Stop;
      allregs[304] = Regs_Arm7.Sect_timer7.TM3CNT_L;
      allregs[305] = Regs_Arm7.Sect_timer7.TM3CNT_H;
      allregs[306] = Regs_Arm7.Sect_timer7.TM3CNT_H_Prescaler;
      allregs[307] = Regs_Arm7.Sect_timer7.TM3CNT_H_Count_up;
      allregs[308] = Regs_Arm7.Sect_timer7.TM3CNT_H_Timer_IRQ_Enable;
      allregs[309] = Regs_Arm7.Sect_timer7.TM3CNT_H_Timer_Start_Stop;
      allregs[310] = Regs_Arm7.Sect_keypad7.KEYINPUT;
      allregs[311] = Regs_Arm7.Sect_keypad7.KEYCNT;
      allregs[312] = Regs_Arm7.Sect_keypad7.RCNT;
      allregs[313] = Regs_Arm7.Sect_keypad7.EXTKEYIN;
      allregs[314] = Regs_Arm7.Sect_serial7.SIODATA32;
      allregs[315] = Regs_Arm7.Sect_serial7.SIOMULTI0;
      allregs[316] = Regs_Arm7.Sect_serial7.SIOMULTI1;
      allregs[317] = Regs_Arm7.Sect_serial7.SIOMULTI2;
      allregs[318] = Regs_Arm7.Sect_serial7.SIOMULTI3;
      allregs[319] = Regs_Arm7.Sect_serial7.SIOCNT;
      allregs[320] = Regs_Arm7.Sect_serial7.SIOMLT_SEND;
      allregs[321] = Regs_Arm7.Sect_serial7.SIODATA8;
      allregs[322] = Regs_Arm7.Sect_serial7.JOYCNT;
      allregs[323] = Regs_Arm7.Sect_serial7.JOY_RECV;
      allregs[324] = Regs_Arm7.Sect_serial7.JOY_TRANS;
      allregs[325] = Regs_Arm7.Sect_serial7.JOYSTAT;
      allregs[326] = Regs_Arm7.Sect_system7.RTC_reg;
      allregs[327] = Regs_Arm7.Sect_system7.RTC_reg_Data_IO;
      allregs[328] = Regs_Arm7.Sect_system7.RTC_reg_Clock;
      allregs[329] = Regs_Arm7.Sect_system7.RTC_reg_Select;
      allregs[330] = Regs_Arm7.Sect_system7.RTC_reg_Unused_IO_Line3;
      allregs[331] = Regs_Arm7.Sect_system7.RTC_reg_Data_Direction;
      allregs[332] = Regs_Arm7.Sect_system7.RTC_reg_Clock_Direction;
      allregs[333] = Regs_Arm7.Sect_system7.RTC_reg_Select_Direction;
      allregs[334] = Regs_Arm7.Sect_system7.RTC_reg_Direction_unused3;
      allregs[335] = Regs_Arm7.Sect_system7.RTC_reg_Unused_IO_Lines811;
      allregs[336] = Regs_Arm7.Sect_system7.RTC_reg_Direction_unused811;
      allregs[337] = Regs_Arm7.Sect_system7.IPCSYNC;
      allregs[338] = Regs_Arm7.Sect_system7.IPCSYNC_Data_from_IPCSYNC;
      allregs[339] = Regs_Arm7.Sect_system7.IPCSYNC_Data_to_IPCSYNC;
      allregs[340] = Regs_Arm7.Sect_system7.IPCSYNC_IRQ_to_remote_CPU;
      allregs[341] = Regs_Arm7.Sect_system7.IPCSYNC_Ena_IRQ_from_remote_CPU;
      allregs[342] = Regs_Arm7.Sect_system7.IPCFIFOCNT;
      allregs[343] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Send_Fifo_Empty_Status;
      allregs[344] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Send_Fifo_Full_Status;
      allregs[345] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Send_Fifo_Empty_IRQ;
      allregs[346] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Send_Fifo_Clear;
      allregs[347] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Receive_Fifo_Empty;
      allregs[348] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Receive_Fifo_Full;
      allregs[349] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Receive_Fifo_Not_Empty_IRQ;
      allregs[350] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Error_Read_Empty_Send_Full;
      allregs[351] = Regs_Arm7.Sect_system7.IPCFIFOCNT_Enable_Send_Receive_Fifo;
      allregs[352] = Regs_Arm7.Sect_system7.IPCFIFOSEND;
      allregs[353] = Regs_Arm7.Sect_system7.IPCFIFORECV;
      allregs[354] = Regs_Arm7.Sect_system7.AUXSPICNT;
      allregs[355] = Regs_Arm7.Sect_system7.AUXSPICNT_SPI_Baudrate;
      allregs[356] = Regs_Arm7.Sect_system7.AUXSPICNT_SPI_Hold_Chipselect;
      allregs[357] = Regs_Arm7.Sect_system7.AUXSPICNT_SPI_Busy;
      allregs[358] = Regs_Arm7.Sect_system7.AUXSPICNT_NDS_Slot_Mode;
      allregs[359] = Regs_Arm7.Sect_system7.AUXSPICNT_Transfer_Ready_IRQ;
      allregs[360] = Regs_Arm7.Sect_system7.AUXSPICNT_NDS_Slot_Enable;
      allregs[361] = Regs_Arm7.Sect_system7.AUXSPIDATA;
      allregs[362] = Regs_Arm7.Sect_system7.ROMCTRL;
      allregs[363] = Regs_Arm7.Sect_system7.ROMCTRL_KEY1_gap1_length;
      allregs[364] = Regs_Arm7.Sect_system7.ROMCTRL_KEY2_encrypt_data;
      allregs[365] = Regs_Arm7.Sect_system7.ROMCTRL_SE;
      allregs[366] = Regs_Arm7.Sect_system7.ROMCTRL_KEY2_Apply_Seed;
      allregs[367] = Regs_Arm7.Sect_system7.ROMCTRL_KEY1_gap2_length;
      allregs[368] = Regs_Arm7.Sect_system7.ROMCTRL_KEY2_encrypt_cmd;
      allregs[369] = Regs_Arm7.Sect_system7.ROMCTRL_Data_Word_Status;
      allregs[370] = Regs_Arm7.Sect_system7.ROMCTRL_Data_Block_size;
      allregs[371] = Regs_Arm7.Sect_system7.ROMCTRL_Transfer_CLK_rate;
      allregs[372] = Regs_Arm7.Sect_system7.ROMCTRL_KEY1_Gap_CLKs;
      allregs[373] = Regs_Arm7.Sect_system7.ROMCTRL_RESB_Release_Reset;
      allregs[374] = Regs_Arm7.Sect_system7.ROMCTRL_WR;
      allregs[375] = Regs_Arm7.Sect_system7.ROMCTRL_Block_Start_Status;
      allregs[376] = Regs_Arm7.Sect_system7.Gamecard_bus_Command_1;
      allregs[377] = Regs_Arm7.Sect_system7.Gamecard_bus_Command_2;
      allregs[378] = Regs_Arm7.Sect_system7.Gamecard_bus_DataIn;
      allregs[379] = Regs_Arm7.Sect_system7.Encryption_Seed_0_Lower;
      allregs[380] = Regs_Arm7.Sect_system7.Encryption_Seed_1_Lower;
      allregs[381] = Regs_Arm7.Sect_system7.Encryption_Seed_0_Upper;
      allregs[382] = Regs_Arm7.Sect_system7.Encryption_Seed_1_Upper;
      allregs[383] = Regs_Arm7.Sect_system7.SPICNT;
      allregs[384] = Regs_Arm7.Sect_system7.SPICNT_Baudrate;
      allregs[385] = Regs_Arm7.Sect_system7.SPICNT_Busy_Flag;
      allregs[386] = Regs_Arm7.Sect_system7.SPICNT_Device_Select;
      allregs[387] = Regs_Arm7.Sect_system7.SPICNT_Transfer_Size;
      allregs[388] = Regs_Arm7.Sect_system7.SPICNT_Chipselect_Hold;
      allregs[389] = Regs_Arm7.Sect_system7.SPICNT_Interrupt_Request;
      allregs[390] = Regs_Arm7.Sect_system7.SPICNT_SPI_Bus_Enable;
      allregs[391] = Regs_Arm7.Sect_system7.SPIDATA;
      allregs[392] = Regs_Arm7.Sect_system7.SPIDATA_Power_Down_Mode;
      allregs[393] = Regs_Arm7.Sect_system7.SPIDATA_Reference_Select;
      allregs[394] = Regs_Arm7.Sect_system7.SPIDATA_Conversion_Mode;
      allregs[395] = Regs_Arm7.Sect_system7.SPIDATA_Channel_Select;
      allregs[396] = Regs_Arm7.Sect_system7.SPIDATA_Start_Bit;
      allregs[397] = Regs_Arm7.Sect_system7.EXMEMSTAT;
      allregs[398] = Regs_Arm7.Sect_system7.EXMEMSTAT_GBASlot_SRAM_Access_Time;
      allregs[399] = Regs_Arm7.Sect_system7.EXMEMSTAT_GBASlot_ROM_1st_Access_Time;
      allregs[400] = Regs_Arm7.Sect_system7.EXMEMSTAT_GBASlot_ROM_2nd_Access_Time;
      allregs[401] = Regs_Arm7.Sect_system7.EXMEMSTAT_GBASlot_PHI_pin_out;
      allregs[402] = Regs_Arm7.Sect_system7.EXMEMSTAT_GBASlot_Access_Rights;
      allregs[403] = Regs_Arm7.Sect_system7.EXMEMSTAT_NDSSlot_Access_Rights;
      allregs[404] = Regs_Arm7.Sect_system7.EXMEMSTAT_SET;
      allregs[405] = Regs_Arm7.Sect_system7.EXMEMSTAT_MainMem_Interface_Mode;
      allregs[406] = Regs_Arm7.Sect_system7.EXMEMSTAT_MainMem_Access_Priority;
      allregs[407] = Regs_Arm7.Sect_system7.WIFIWAITCNT;
      allregs[408] = Regs_Arm7.Sect_system7.WIFIWAITCNT_WS0;
      allregs[409] = Regs_Arm7.Sect_system7.WIFIWAITCNT_WS1;
      allregs[410] = Regs_Arm7.Sect_system7.IME;
      allregs[411] = Regs_Arm7.Sect_system7.IE;
      allregs[412] = Regs_Arm7.Sect_system7.IE_LCD_V_Blank;
      allregs[413] = Regs_Arm7.Sect_system7.IE_LCD_H_Blank;
      allregs[414] = Regs_Arm7.Sect_system7.IE_LCD_V_Counter_Match;
      allregs[415] = Regs_Arm7.Sect_system7.IE_Timer_0;
      allregs[416] = Regs_Arm7.Sect_system7.IE_Timer_1;
      allregs[417] = Regs_Arm7.Sect_system7.IE_Timer_2;
      allregs[418] = Regs_Arm7.Sect_system7.IE_Timer_3;
      allregs[419] = Regs_Arm7.Sect_system7.IE_SIO_RCNT_RTC;
      allregs[420] = Regs_Arm7.Sect_system7.IE_DMA_0;
      allregs[421] = Regs_Arm7.Sect_system7.IE_DMA_1;
      allregs[422] = Regs_Arm7.Sect_system7.IE_DMA_2;
      allregs[423] = Regs_Arm7.Sect_system7.IE_DMA_3;
      allregs[424] = Regs_Arm7.Sect_system7.IE_Keypad;
      allregs[425] = Regs_Arm7.Sect_system7.IE_GBA_Slot_external_IRQ;
      allregs[426] = Regs_Arm7.Sect_system7.IE_IPC_Sync;
      allregs[427] = Regs_Arm7.Sect_system7.IE_IPC_Send_FIFO_Empty;
      allregs[428] = Regs_Arm7.Sect_system7.IE_IPC_Recv_FIFO_Not_Empty;
      allregs[429] = Regs_Arm7.Sect_system7.IE_NDS_Slot_Transfer_Complete;
      allregs[430] = Regs_Arm7.Sect_system7.IE_NDS_Slot_IREQ_MC;
      allregs[431] = Regs_Arm7.Sect_system7.IE_Screens_unfolding;
      allregs[432] = Regs_Arm7.Sect_system7.IE_SPI_bus;
      allregs[433] = Regs_Arm7.Sect_system7.IE_Wifi;
      allregs[434] = Regs_Arm7.Sect_system7.IE_unused;
      allregs[435] = Regs_Arm7.Sect_system7.IF;
      allregs[436] = Regs_Arm7.Sect_system7.IF_LCD_V_Blank;
      allregs[437] = Regs_Arm7.Sect_system7.IF_LCD_H_Blank;
      allregs[438] = Regs_Arm7.Sect_system7.IF_LCD_V_Counter_Match;
      allregs[439] = Regs_Arm7.Sect_system7.IF_Timer_0;
      allregs[440] = Regs_Arm7.Sect_system7.IF_Timer_1;
      allregs[441] = Regs_Arm7.Sect_system7.IF_Timer_2;
      allregs[442] = Regs_Arm7.Sect_system7.IF_Timer_3;
      allregs[443] = Regs_Arm7.Sect_system7.IF_SIO_RCNT_RTC;
      allregs[444] = Regs_Arm7.Sect_system7.IF_DMA_0;
      allregs[445] = Regs_Arm7.Sect_system7.IF_DMA_1;
      allregs[446] = Regs_Arm7.Sect_system7.IF_DMA_2;
      allregs[447] = Regs_Arm7.Sect_system7.IF_DMA_3;
      allregs[448] = Regs_Arm7.Sect_system7.IF_Keypad;
      allregs[449] = Regs_Arm7.Sect_system7.IF_GBA_Slot_external_IRQ;
      allregs[450] = Regs_Arm7.Sect_system7.IF_IPC_Sync;
      allregs[451] = Regs_Arm7.Sect_system7.IF_IPC_Send_FIFO_Empty;
      allregs[452] = Regs_Arm7.Sect_system7.IF_IPC_Recv_FIFO_Not_Empty;
      allregs[453] = Regs_Arm7.Sect_system7.IF_NDS_Slot_Transfer_Complete;
      allregs[454] = Regs_Arm7.Sect_system7.IF_NDS_Slot_IREQ_MC;
      allregs[455] = Regs_Arm7.Sect_system7.IF_Screens_unfolding;
      allregs[456] = Regs_Arm7.Sect_system7.IF_SPI_bus;
      allregs[457] = Regs_Arm7.Sect_system7.IF_Wifi;
      allregs[458] = Regs_Arm7.Sect_system7.RAMSTAT;
      allregs[459] = Regs_Arm7.Sect_system7.RAMSTAT_VRAMSTAT_C;
      allregs[460] = Regs_Arm7.Sect_system7.RAMSTAT_VRAMSTAT_D;
      allregs[461] = Regs_Arm7.Sect_system7.MemControl2_WRAM;
      allregs[462] = Regs_Arm7.Sect_system7.POSTFLG;
      allregs[463] = Regs_Arm7.Sect_system7.POSTFLG_Flag;
      allregs[464] = Regs_Arm7.Sect_system7.POSTFLG_Power_Down_Mode;
      allregs[465] = Regs_Arm7.Sect_system7.POWCNT2;
      allregs[466] = Regs_Arm7.Sect_system7.POWCNT2_Sound;
      allregs[467] = Regs_Arm7.Sect_system7.POWCNT2_Wifi;
      allregs[468] = Regs_Arm7.Sect_system7.BIOSPROT;
      // DISPSTAT at 0x004 = 0x0004;
      data[4] = 4 & 0xFF;
      // SOUNDBIAS at 0x504 = 0x0200;
      data[1284] = 512 & 0xFF;
      data[1285] = (512 >> 8) & 0xFF;
      // MemControl2_WRAM at 0x240 = 3;
      data[576] = 768 & 0xFF;
      data[577] = (768 >> 8) & 0xFF;
      // POSTFLG_Flag at 0x300 = 1;
      data[768] = 1 & 0xFF;
      // POWCNT2_Sound at 0x304 = 1;
      data[772] = 1 & 0xFF;
      // BIOSPROT at 0x308 = 0x1205;
      data[776] = 4613 & 0xFF;
      data[777] = (4613 >> 8) & 0xFF;

    // DISPSTAT at 0x004 = 0xFFFFFFFF;
    rwmask[4] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[5] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[6] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[7] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA0SAD at 0xB0 = 0xFFFFFFFF;
    rwmask[176] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[177] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[178] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[179] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA0DAD at 0xB4 = 0xFFFFFFFF;
    rwmask[180] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[181] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[182] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[183] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA0CNT_L at 0xB8 = 0xFFFFFFFF;
    rwmask[184] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[185] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[186] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[187] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA1SAD at 0xBC = 0xFFFFFFFF;
    rwmask[188] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[189] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[190] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[191] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA1DAD at 0xC0 = 0xFFFFFFFF;
    rwmask[192] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[193] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[194] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[195] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA1CNT_L at 0xC4 = 0xFFFFFFFF;
    rwmask[196] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[197] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[198] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[199] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA2SAD at 0xC8 = 0xFFFFFFFF;
    rwmask[200] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[201] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[202] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[203] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA2DAD at 0xCC = 0xFFFFFFFF;
    rwmask[204] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[205] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[206] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[207] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA2CNT_L at 0xD0 = 0xFFFFFFFF;
    rwmask[208] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[209] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[210] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[211] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA3SAD at 0xD4 = 0xFFFFFFFF;
    rwmask[212] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[213] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[214] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[215] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA3DAD at 0xD8 = 0xFFFFFFFF;
    rwmask[216] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[217] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[218] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[219] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // DMA3CNT_L at 0xDC = 0xFFFFFFFF;
    rwmask[220] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[221] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[222] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[223] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // TM0CNT_L at 0x100 = 0xFFFFFFFF;
    rwmask[256] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[257] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[258] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[259] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // TM1CNT_L at 0x104 = 0xFFFFFFFF;
    rwmask[260] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[261] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[262] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[263] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // TM2CNT_L at 0x108 = 0xFFFFFFFF;
    rwmask[264] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[265] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[266] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[267] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // TM3CNT_L at 0x10C = 0xFFFFFFFF;
    rwmask[268] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[269] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[270] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[271] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // SIODATA32 at 0x120 = 0xFFFFFFFF;
    rwmask[288] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[289] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[290] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[291] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // SIOMULTI1 at 0x122 = 0xFFFF;
    rwmask[290] = (byte)(0xFFFF & 0xFF);
    rwmask[291] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[292] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[293] = (byte)((0xFFFF >> 24) & 0xFF);
    // SIOMULTI2 at 0x124 = 0xFFFF;
    rwmask[292] = (byte)(0xFFFF & 0xFF);
    rwmask[293] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[294] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[295] = (byte)((0xFFFF >> 24) & 0xFF);
    // SIOMULTI3 at 0x126 = 0xFFFF;
    rwmask[294] = (byte)(0xFFFF & 0xFF);
    rwmask[295] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[296] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[297] = (byte)((0xFFFF >> 24) & 0xFF);
    // SIOCNT at 0x128 = 0xFFFF;
    rwmask[296] = (byte)(0xFFFF & 0xFF);
    rwmask[297] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[298] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[299] = (byte)((0xFFFF >> 24) & 0xFF);
    // SIOMLT_SEND at 0x12A = 0xFFFF;
    rwmask[298] = (byte)(0xFFFF & 0xFF);
    rwmask[299] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[300] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[301] = (byte)((0xFFFF >> 24) & 0xFF);
    // KEYINPUT at 0x130 = 0xFFFFFFFF;
    rwmask[304] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[305] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[306] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[307] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // RCNT at 0x134 = 0xFFFFFF;
    rwmask[308] = (byte)(0xFFFFFF & 0xFF);
    rwmask[309] = (byte)((0xFFFFFF >> 8) & 0xFF);
    rwmask[310] = (byte)((0xFFFFFF >> 16) & 0xFF);
    rwmask[311] = (byte)((0xFFFFFF >> 24) & 0xFF);
    // RTC_reg at 0x138 = 0xFFFF;
    rwmask[312] = (byte)(0xFFFF & 0xFF);
    rwmask[313] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[314] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[315] = (byte)((0xFFFF >> 24) & 0xFF);
    // JOYCNT at 0x140 = 0xFFFF;
    rwmask[320] = (byte)(0xFFFF & 0xFF);
    rwmask[321] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[322] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[323] = (byte)((0xFFFF >> 24) & 0xFF);
    // JOY_RECV at 0x150 = 0xFFFFFFFF;
    rwmask[336] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[337] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[338] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[339] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // JOY_TRANS at 0x154 = 0xFFFFFFFF;
    rwmask[340] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[341] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[342] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[343] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // JOYSTAT at 0x158 = 0xFFFF;
    rwmask[344] = (byte)(0xFFFF & 0xFF);
    rwmask[345] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[346] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[347] = (byte)((0xFFFF >> 24) & 0xFF);
    // IPCSYNC at 0x180 = 0x4F0F;
    rwmask[384] = (byte)(0x4F0F & 0xFF);
    rwmask[385] = (byte)((0x4F0F >> 8) & 0xFF);
    rwmask[386] = (byte)((0x4F0F >> 16) & 0xFF);
    rwmask[387] = (byte)((0x4F0F >> 24) & 0xFF);
    // IPCFIFOCNT at 0x184 = 0xC707;
    rwmask[388] = (byte)(0xC707 & 0xFF);
    rwmask[389] = (byte)((0xC707 >> 8) & 0xFF);
    rwmask[390] = (byte)((0xC707 >> 16) & 0xFF);
    rwmask[391] = (byte)((0xC707 >> 24) & 0xFF);
    // IPCFIFOSEND at 0x188 = 0x0;
    rwmask[392] = (byte)(0x0 & 0xFF);
    rwmask[393] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[394] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[395] = (byte)((0x0 >> 24) & 0xFF);
    // AUXSPICNT at 0x1A0 = 0xFFE0C3;
    rwmask[416] = (byte)(0xFFE0C3 & 0xFF);
    rwmask[417] = (byte)((0xFFE0C3 >> 8) & 0xFF);
    rwmask[418] = (byte)((0xFFE0C3 >> 16) & 0xFF);
    rwmask[419] = (byte)((0xFFE0C3 >> 24) & 0xFF);
    // ROMCTRL at 0x1A4 = 0xFFFFFFFF;
    rwmask[420] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[421] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[422] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[423] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // Gamecard_bus_Command_1 at 0x1A8 = 0x0;
    rwmask[424] = (byte)(0x0 & 0xFF);
    rwmask[425] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[426] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[427] = (byte)((0x0 >> 24) & 0xFF);
    // Gamecard_bus_Command_2 at 0x1AC = 0x0;
    rwmask[428] = (byte)(0x0 & 0xFF);
    rwmask[429] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[430] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[431] = (byte)((0x0 >> 24) & 0xFF);
    // Encryption_Seed_0_Lower at 0x1B0 = 0x0;
    rwmask[432] = (byte)(0x0 & 0xFF);
    rwmask[433] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[434] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[435] = (byte)((0x0 >> 24) & 0xFF);
    // Encryption_Seed_1_Lower at 0x1B4 = 0x0;
    rwmask[436] = (byte)(0x0 & 0xFF);
    rwmask[437] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[438] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[439] = (byte)((0x0 >> 24) & 0xFF);
    // Encryption_Seed_0_Upper at 0x1B8 = 0x0;
    rwmask[440] = (byte)(0x0 & 0xFF);
    rwmask[441] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[442] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[443] = (byte)((0x0 >> 24) & 0xFF);
    // SPICNT at 0x1C0 = 0xFFCF83;
    rwmask[448] = (byte)(0xFFCF83 & 0xFF);
    rwmask[449] = (byte)((0xFFCF83 >> 8) & 0xFF);
    rwmask[450] = (byte)((0xFFCF83 >> 16) & 0xFF);
    rwmask[451] = (byte)((0xFFCF83 >> 24) & 0xFF);
    // EXMEMSTAT at 0x204 = 0x3FFFFFFF;
    rwmask[516] = (byte)(0x3FFFFFFF & 0xFF);
    rwmask[517] = (byte)((0x3FFFFFFF >> 8) & 0xFF);
    rwmask[518] = (byte)((0x3FFFFFFF >> 16) & 0xFF);
    rwmask[519] = (byte)((0x3FFFFFFF >> 24) & 0xFF);
    // IME at 0x208 = 0xFFFFFFFF;
    rwmask[520] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[521] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[522] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[523] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
    // IE at 0x210 = 0xFFDF3FFF;
    rwmask[528] = (byte)(0xFFDF3FFF & 0xFF);
    rwmask[529] = (byte)((0xFFDF3FFF >> 8) & 0xFF);
    rwmask[530] = (byte)((0xFFDF3FFF >> 16) & 0xFF);
    rwmask[531] = (byte)((0xFFDF3FFF >> 24) & 0xFF);
    // IF at 0x214 = 0x1F3FFF;
    rwmask[532] = (byte)(0x1F3FFF & 0xFF);
    rwmask[533] = (byte)((0x1F3FFF >> 8) & 0xFF);
    rwmask[534] = (byte)((0x1F3FFF >> 16) & 0xFF);
    rwmask[535] = (byte)((0x1F3FFF >> 24) & 0xFF);
    // RAMSTAT at 0x240 = 0x3FF;
    rwmask[576] = (byte)(0x3FF & 0xFF);
    rwmask[577] = (byte)((0x3FF >> 8) & 0xFF);
    rwmask[578] = (byte)((0x3FF >> 16) & 0xFF);
    rwmask[579] = (byte)((0x3FF >> 24) & 0xFF);
    // POSTFLG at 0x300 = 0xC001;
    rwmask[768] = (byte)(0xC001 & 0xFF);
    rwmask[769] = (byte)((0xC001 >> 8) & 0xFF);
    rwmask[770] = (byte)((0xC001 >> 16) & 0xFF);
    rwmask[771] = (byte)((0xC001 >> 24) & 0xFF);
    // POWCNT2 at 0x304 = 0x3;
    rwmask[772] = (byte)(0x3 & 0xFF);
    rwmask[773] = (byte)((0x3 >> 8) & 0xFF);
    rwmask[774] = (byte)((0x3 >> 16) & 0xFF);
    rwmask[775] = (byte)((0x3 >> 24) & 0xFF);
    // BIOSPROT at 0x308 = 0xFFFF;
    rwmask[776] = (byte)(0xFFFF & 0xFF);
    rwmask[777] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[778] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[779] = (byte)((0xFFFF >> 24) & 0xFF);
    // SOUND0CNT at 0x400 = 0xFF7F837F;
    rwmask[1024] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1025] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1026] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1027] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND0SAD at 0x404 = 0x0;
    rwmask[1028] = (byte)(0x0 & 0xFF);
    rwmask[1029] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1030] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1031] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND0TMR at 0x408 = 0x0;
    rwmask[1032] = (byte)(0x0 & 0xFF);
    rwmask[1033] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1034] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1035] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND0LEN at 0x40C = 0x0;
    rwmask[1036] = (byte)(0x0 & 0xFF);
    rwmask[1037] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1038] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1039] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND1CNT at 0x410 = 0xFF7F837F;
    rwmask[1040] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1041] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1042] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1043] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND1SAD at 0x414 = 0x0;
    rwmask[1044] = (byte)(0x0 & 0xFF);
    rwmask[1045] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1046] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1047] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND1TMR at 0x418 = 0x0;
    rwmask[1048] = (byte)(0x0 & 0xFF);
    rwmask[1049] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1050] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1051] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND1LEN at 0x41C = 0x0;
    rwmask[1052] = (byte)(0x0 & 0xFF);
    rwmask[1053] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1054] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1055] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND2CNT at 0x420 = 0xFF7F837F;
    rwmask[1056] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1057] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1058] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1059] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND2SAD at 0x424 = 0x0;
    rwmask[1060] = (byte)(0x0 & 0xFF);
    rwmask[1061] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1062] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1063] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND2TMR at 0x428 = 0x0;
    rwmask[1064] = (byte)(0x0 & 0xFF);
    rwmask[1065] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1066] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1067] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND2LEN at 0x42C = 0x0;
    rwmask[1068] = (byte)(0x0 & 0xFF);
    rwmask[1069] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1070] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1071] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND3CNT at 0x430 = 0xFF7F837F;
    rwmask[1072] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1073] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1074] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1075] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND3SAD at 0x434 = 0x0;
    rwmask[1076] = (byte)(0x0 & 0xFF);
    rwmask[1077] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1078] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1079] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND3TMR at 0x438 = 0x0;
    rwmask[1080] = (byte)(0x0 & 0xFF);
    rwmask[1081] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1082] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1083] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND3LEN at 0x43C = 0x0;
    rwmask[1084] = (byte)(0x0 & 0xFF);
    rwmask[1085] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1086] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1087] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND4CNT at 0x440 = 0xFF7F837F;
    rwmask[1088] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1089] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1090] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1091] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND4SAD at 0x444 = 0x0;
    rwmask[1092] = (byte)(0x0 & 0xFF);
    rwmask[1093] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1094] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1095] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND4TMR at 0x448 = 0x0;
    rwmask[1096] = (byte)(0x0 & 0xFF);
    rwmask[1097] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1098] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1099] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND4LEN at 0x44C = 0x0;
    rwmask[1100] = (byte)(0x0 & 0xFF);
    rwmask[1101] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1102] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1103] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND5CNT at 0x450 = 0xFF7F837F;
    rwmask[1104] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1105] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1106] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1107] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND5SAD at 0x454 = 0x0;
    rwmask[1108] = (byte)(0x0 & 0xFF);
    rwmask[1109] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1110] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1111] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND5TMR at 0x458 = 0x0;
    rwmask[1112] = (byte)(0x0 & 0xFF);
    rwmask[1113] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1114] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1115] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND5LEN at 0x45C = 0x0;
    rwmask[1116] = (byte)(0x0 & 0xFF);
    rwmask[1117] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1118] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1119] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND6CNT at 0x460 = 0xFF7F837F;
    rwmask[1120] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1121] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1122] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1123] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND6SAD at 0x464 = 0x0;
    rwmask[1124] = (byte)(0x0 & 0xFF);
    rwmask[1125] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1126] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1127] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND6TMR at 0x468 = 0x0;
    rwmask[1128] = (byte)(0x0 & 0xFF);
    rwmask[1129] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1130] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1131] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND6LEN at 0x46C = 0x0;
    rwmask[1132] = (byte)(0x0 & 0xFF);
    rwmask[1133] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1134] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1135] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND7CNT at 0x470 = 0xFF7F837F;
    rwmask[1136] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1137] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1138] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1139] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND7SAD at 0x474 = 0x0;
    rwmask[1140] = (byte)(0x0 & 0xFF);
    rwmask[1141] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1142] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1143] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND7TMR at 0x478 = 0x0;
    rwmask[1144] = (byte)(0x0 & 0xFF);
    rwmask[1145] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1146] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1147] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND7LEN at 0x47C = 0x0;
    rwmask[1148] = (byte)(0x0 & 0xFF);
    rwmask[1149] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1150] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1151] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND8CNT at 0x480 = 0xFF7F837F;
    rwmask[1152] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1153] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1154] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1155] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND8SAD at 0x484 = 0x0;
    rwmask[1156] = (byte)(0x0 & 0xFF);
    rwmask[1157] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1158] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1159] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND8TMR at 0x488 = 0x0;
    rwmask[1160] = (byte)(0x0 & 0xFF);
    rwmask[1161] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1162] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1163] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND8LEN at 0x48C = 0x0;
    rwmask[1164] = (byte)(0x0 & 0xFF);
    rwmask[1165] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1166] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1167] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND9CNT at 0x490 = 0xFF7F837F;
    rwmask[1168] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1169] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1170] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1171] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND9SAD at 0x494 = 0x0;
    rwmask[1172] = (byte)(0x0 & 0xFF);
    rwmask[1173] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1174] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1175] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND9TMR at 0x498 = 0x0;
    rwmask[1176] = (byte)(0x0 & 0xFF);
    rwmask[1177] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1178] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1179] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND9LEN at 0x49C = 0x0;
    rwmask[1180] = (byte)(0x0 & 0xFF);
    rwmask[1181] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1182] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1183] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND10CNT at 0x4A0 = 0xFF7F837F;
    rwmask[1184] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1185] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1186] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1187] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND10SAD at 0x4A4 = 0x0;
    rwmask[1188] = (byte)(0x0 & 0xFF);
    rwmask[1189] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1190] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1191] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND10TMR at 0x4A8 = 0x0;
    rwmask[1192] = (byte)(0x0 & 0xFF);
    rwmask[1193] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1194] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1195] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND10LEN at 0x4AC = 0x0;
    rwmask[1196] = (byte)(0x0 & 0xFF);
    rwmask[1197] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1198] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1199] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND11CNT at 0x4B0 = 0xFF7F837F;
    rwmask[1200] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1201] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1202] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1203] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND11SAD at 0x4B4 = 0x0;
    rwmask[1204] = (byte)(0x0 & 0xFF);
    rwmask[1205] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1206] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1207] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND11TMR at 0x4B8 = 0x0;
    rwmask[1208] = (byte)(0x0 & 0xFF);
    rwmask[1209] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1210] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1211] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND11LEN at 0x4BC = 0x0;
    rwmask[1212] = (byte)(0x0 & 0xFF);
    rwmask[1213] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1214] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1215] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND12CNT at 0x4C0 = 0xFF7F837F;
    rwmask[1216] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1217] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1218] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1219] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND12SAD at 0x4C4 = 0x0;
    rwmask[1220] = (byte)(0x0 & 0xFF);
    rwmask[1221] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1222] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1223] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND12TMR at 0x4C8 = 0x0;
    rwmask[1224] = (byte)(0x0 & 0xFF);
    rwmask[1225] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1226] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1227] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND12LEN at 0x4CC = 0x0;
    rwmask[1228] = (byte)(0x0 & 0xFF);
    rwmask[1229] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1230] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1231] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND13CNT at 0x4D0 = 0xFF7F837F;
    rwmask[1232] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1233] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1234] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1235] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND13SAD at 0x4D4 = 0x0;
    rwmask[1236] = (byte)(0x0 & 0xFF);
    rwmask[1237] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1238] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1239] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND13TMR at 0x4D8 = 0x0;
    rwmask[1240] = (byte)(0x0 & 0xFF);
    rwmask[1241] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1242] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1243] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND13LEN at 0x4DC = 0x0;
    rwmask[1244] = (byte)(0x0 & 0xFF);
    rwmask[1245] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1246] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1247] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND14CNT at 0x4E0 = 0xFF7F837F;
    rwmask[1248] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1249] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1250] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1251] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND14SAD at 0x4E4 = 0x0;
    rwmask[1252] = (byte)(0x0 & 0xFF);
    rwmask[1253] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1254] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1255] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND14TMR at 0x4E8 = 0x0;
    rwmask[1256] = (byte)(0x0 & 0xFF);
    rwmask[1257] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1258] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1259] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND14LEN at 0x4EC = 0x0;
    rwmask[1260] = (byte)(0x0 & 0xFF);
    rwmask[1261] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1262] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1263] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND15CNT at 0x4F0 = 0xFF7F837F;
    rwmask[1264] = (byte)(0xFF7F837F & 0xFF);
    rwmask[1265] = (byte)((0xFF7F837F >> 8) & 0xFF);
    rwmask[1266] = (byte)((0xFF7F837F >> 16) & 0xFF);
    rwmask[1267] = (byte)((0xFF7F837F >> 24) & 0xFF);
    // SOUND15SAD at 0x4F4 = 0x0;
    rwmask[1268] = (byte)(0x0 & 0xFF);
    rwmask[1269] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1270] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1271] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND15TMR at 0x4F8 = 0x0;
    rwmask[1272] = (byte)(0x0 & 0xFF);
    rwmask[1273] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1274] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1275] = (byte)((0x0 >> 24) & 0xFF);
    // SOUND15LEN at 0x4FC = 0x0;
    rwmask[1276] = (byte)(0x0 & 0xFF);
    rwmask[1277] = (byte)((0x0 >> 8) & 0xFF);
    rwmask[1278] = (byte)((0x0 >> 16) & 0xFF);
    rwmask[1279] = (byte)((0x0 >> 24) & 0xFF);
    // SOUNDCNT at 0x500 = 0xBF7F;
    rwmask[1280] = (byte)(0xBF7F & 0xFF);
    rwmask[1281] = (byte)((0xBF7F >> 8) & 0xFF);
    rwmask[1282] = (byte)((0xBF7F >> 16) & 0xFF);
    rwmask[1283] = (byte)((0xBF7F >> 24) & 0xFF);
    // SOUNDBIAS at 0x504 = 0x3FF;
    rwmask[1284] = (byte)(0x3FF & 0xFF);
    rwmask[1285] = (byte)((0x3FF >> 8) & 0xFF);
    rwmask[1286] = (byte)((0x3FF >> 16) & 0xFF);
    rwmask[1287] = (byte)((0x3FF >> 24) & 0xFF);
    // SOUNDCAP at 0x508 = 0x8F8F;
    rwmask[1288] = (byte)(0x8F8F & 0xFF);
    rwmask[1289] = (byte)((0x8F8F >> 8) & 0xFF);
    rwmask[1290] = (byte)((0x8F8F >> 16) & 0xFF);
    rwmask[1291] = (byte)((0x8F8F >> 24) & 0xFF);
    // SNDCAP0DAD at 0x510 = 0x7FFFFFF;
    rwmask[1296] = (byte)(0x7FFFFFF & 0xFF);
    rwmask[1297] = (byte)((0x7FFFFFF >> 8) & 0xFF);
    rwmask[1298] = (byte)((0x7FFFFFF >> 16) & 0xFF);
    rwmask[1299] = (byte)((0x7FFFFFF >> 24) & 0xFF);
    // SNDCAP1DAD at 0x518 = 0x7FFFFFF;
    rwmask[1304] = (byte)(0x7FFFFFF & 0xFF);
    rwmask[1305] = (byte)((0x7FFFFFF >> 8) & 0xFF);
    rwmask[1306] = (byte)((0x7FFFFFF >> 16) & 0xFF);
    rwmask[1307] = (byte)((0x7FFFFFF >> 24) & 0xFF);
    // SNDCAP1LEN at 0x51C = 0xFFFF;
    rwmask[1308] = (byte)(0xFFFF & 0xFF);
    rwmask[1309] = (byte)((0xFFFF >> 8) & 0xFF);
    rwmask[1310] = (byte)((0xFFFF >> 16) & 0xFF);
    rwmask[1311] = (byte)((0xFFFF >> 24) & 0xFF);
    // IPCFIFORECV at 0xFFF = 0xFFFFFFFF;
    rwmask[4095] = (byte)(0xFFFFFFFF & 0xFF);
    rwmask[4096] = (byte)((0xFFFFFFFF >> 8) & 0xFF);
    rwmask[4097] = (byte)((0xFFFFFFFF >> 16) & 0xFF);
    rwmask[4098] = (byte)((0xFFFFFFFF >> 24) & 0xFF);
}
